(function(n) {
    function d(n) {
        e().then(() => {
            !n || (s = n), y("ux") && ut(), y("lv") && (ft(), $(`.js__card .js__card-phone-btn`).click(function() {
                let n = $(this).closest(".js__card").hasClass(`${cm.GetStyleClass("card-full-label-verified")}`);
                n && (o(), window.enableDebugLog && console.info(`click phone srp ${n}`))
            }), $(`.js__phone-event`).click(function() {
                if (data) {
                    let n = data.vrs == "1";
                    n && (o(), window.enableDebugLog && console.info(`click phone ldp ${n}`))
                }
            }), $(`.js__product-details-hidden-phone`).click(function() {
                if (data) {
                    let n = data.vrs == "1";
                    n && (o(), window.enableDebugLog && console.info(`click phone ldp ${n}`))
                }
            }))
        })
    }

    function y(n) {
        return !!n && s[n] != null && s[n]
    }

    function t(n) {
        return `sur.viewed.${n}`
    }

    function u() {
        return getCookie("con.ses.id") || ""
    }

    function f(n) {
        const t = u();
        return `sur.${t}.${n}`
    }

    function g(n) {
        v.push(n);
        const i = f(n.key),
            t = cacheHelper.get(i);
        window.enableDebugLog && console.info(`init value of ${n.key} is ${t}`);
        n.condition(t) && n.callback(t)
    }

    function c(n, t) {
        const u = f(n),
            r = cacheHelper.change(u, t),
            i = v.filter(t => t.key == n && t.condition(r));
        if (i.length != 0)
            for (let n = 0; n < i.length; n++) {
                const t = i[n].callback;
                t(r)
            }
    }

    function l() {
        const n = document.getElementById("page-params");
        return n.getAttribute("data-page-hint")
    }

    function nt() {
        window.enableDebugLog && console.info("page viewed");
        const n = i.PageViewed,
            t = n => (n || 0) + 1;
        c(n, t)
    }

    function tt() {
        window.enableDebugLog && console.info("srp/ldp viewed");
        const n = i.SrpLdpViewed,
            t = n => (n || 0) + 1;
        c(n, t)
    }

    function it() {
        e().then(() => {
            window.enableDebugLog && console.info("searched");
            const n = i.Searched,
                t = n => (n || 0) + 1;
            c(n, t)
        })
    }

    function o() {
        e().then(() => {
            window.enableDebugLog && console.info("listing verified phone displayed");
            const n = `sur.${i.LvPhoneDisplayed}`,
                t = n => n ? (n.click = n.click + 1, console.log(n), n) : {
                    click: 1,
                    sessionId: u(),
                    firstTimeClick: new Date
                },
                r = cacheHelper.change(n, t);
            window.enableDebugLog && console.info(r)
        })
    }

    function rt() {
        const n = f(i.Dismiss);
        cacheHelper.set(n, !0);
        window.enableDebugLog && console.info("survey dismissed", u())
    }

    function w() {
        e().then(() => {
            window.enableDebugLog && console.info("trying to display survey popup");
            let s = cacheHelper.get(f(i.Dismiss), !1);
            if (s) {
                window.enableDebugLog && console.info("dismissed in this session", u());
                return
            }
            const e = document.querySelector(".js__survey-ux-rate-template"),
                r = e.getAttribute("sid"),
                o = e.getAttribute("surl");
            let c = cacheHelper.get(t(r), !1);
            if (c) {
                window.enableDebugLog && console.info("survey already viewed", r);
                return
            }
            let n = new CommonJS.Common;
            const l = {
                classContent: "new2021 " + n.GetStyleClass("survey-ux-rate-container"),
                classHeader: "modal-header " + n.GetStyleClass("survey-header"),
                classFooter: "modal-footer " + n.GetStyleClass("survey-footer"),
                title: " ",
                width: $("body#search").length > 0 ? "296" : "auto",
                keepBodyScroll: !1,
                style: "static",
                content: e.outerHTML,
                buttons: [{
                    id: "",
                    text: "Đánh giá ngay",
                    "class": n.GetStyleClass("btn", "btn-pr-solid--md", "survey-link"),
                    eventHandle: function() {
                        window.open(o, "_blank").focus();
                        cacheHelper.set(t(r), !0, h);
                        window.enableDebugLog && console.info("mark survey as viewed", r, o);
                        n.ModalEvent($("#dialogPopup"), "hide")
                    }
                }],
                closePopupCallback: () => rt(),
                disableNomodal: !0
            };
            n.ShowDialog(l)
        })
    }

    function b() {
        const r = document.querySelector(".js__survey-ux-listing-verified"),
            n = r.getAttribute("sid"),
            u = r.getAttribute("surl");
        let f = cacheHelper.get(t(n), !1);
        if (f) {
            window.enableDebugLog && console.info("survey ListingVerified already viewed", n);
            return
        }
        let i = new CommonJS.Common;
        const e = {
            classContent: "js_popup-verified-listing-survey new2021 " + i.GetStyleClass("survey-ux-rate-container", "listing-verified-container"),
            classHeader: "modal-header " + i.GetStyleClass("survey-header"),
            classFooter: "modal-footer " + i.GetStyleClass("survey-footer"),
            title: " ",
            width: $("body#search").length > 0 ? "296" : "auto",
            keepBodyScroll: !1,
            style: "static",
            content: r.outerHTML,
            classTracking: "js_btn-click-survey",
            trackingId: "click-verified-listing-survey",
            buttons: [{
                id: "",
                text: "Đánh giá ngay",
                "class": "js_btn-click-survey " + i.GetStyleClass("btn", "btn-pr-solid--md", "survey-link"),
                eventHandle: function() {
                    window.open(u, "_blank").focus();
                    cacheHelper.set(t(n), !0, h);
                    window.enableDebugLog && console.info("mark survey ListingVerified as viewed", n, u);
                    i.ModalEvent($("#dialogPopup"), "hide")
                }
            }],
            closePopupCallback: () => {
                cacheHelper.set(t(n), !0, h), window.enableDebugLog && console.info("mark survey ListingVerified as viewed", n, u)
            },
            disableNomodal: !0
        };
        i.ShowDialog(e)
    }

    function ut() {
        window.enableDebugLog && console.log("initUserExperienceSurvey");
        const n = () => new Promise((n, t) => {
                const r = "is-seller";
                let i = cacheHelper.get(r);
                if (!i) {
                    const n = getCookie("userinfo");
                    if (window.enableDebugLog && console.log("userInfo", n), !!n) {
                        i = !0;
                        cacheHelper.set(r, !0, 2628e3)
                    }
                }
                i ? (window.enableDebugLog && console.log("user is a seller"), t("user is a seller")) : (window.enableDebugLog && console.log("not seller condition satified"), n())
            }),
            r = n => new Promise(t => {
                g({
                    key: i.SrpLdpViewed,
                    condition: t => t >= n,
                    callback: n => {
                        window.enableDebugLog && console.info("srp / ldp view condition satified"), t(n)
                    }
                })
            }),
            o = n => new Promise((t, i) => {
                const r = u(),
                    f = `sur.${r}.click-phonenumber`;
                let e = cacheHelper.get(f);
                e >= n ? t() : i()
            }),
            s = () => new Promise((n, i) => {
                const u = t("2023-kyc-interview");
                let f = cacheHelper.get(u);
                if (f) i("The user has joined the interview");
                else {
                    var r = 20;
                    (function e() {
                        --r;
                        window.userServices ? window.userServices.getCurrentUserInfo(function(t) {
                            t != null && t.isRegisteredByKYC ? n() : i("The user is not eligible for the interview")
                        }) : r >= 0 && setTimeout(e, 100)
                    })()
                }
            }),
            h = () => new Promise((n, i) => {
                const r = t("2023-q1");
                let u = cacheHelper.get(r);
                u ? (window.enableDebugLog && console.log("already participated in q1 survey"), i("already participated in q1 survey")) : (window.enableDebugLog && console.log("not participated in q1 survey"), n())
            }),
            c = () => new Promise((n, i) => {
                const r = t("2023-q2");
                let u = cacheHelper.get(r);
                u ? (window.enableDebugLog && console.log("already participated in q2 survey"), i("already participated in q2 survey")) : (window.enableDebugLog && console.log("not participated in q2 survey"), n())
            }),
            f = () => new Promise((n, i) => {
                const r = t("2023-q3");
                let u = cacheHelper.get(r);
                u ? (window.enableDebugLog && console.log("already participated in q3 survey"), i("already participated in q3 survey")) : (window.enableDebugLog && console.log("not participated in q3 survey"), n())
            }),
            l = () => new Promise((n, i) => {
                const r = t("2023-q4");
                let u = cacheHelper.get(r);
                u ? (window.enableDebugLog && console.log("already participated in q4 survey"), i("already participated in q4 survey")) : (window.enableDebugLog && console.log("not participated in q4 survey"), n())
            }),
            e = Promise.all([n(), r(k), f()]);
        e.then(() => {
            w()
        }, n => {
            window.enableDebugLog && console.log(n)
        })
    }

    function ft() {
        window.enableDebugLog && console.log("initListingVerifiedSurvey");
        let t = `sur.${i.LvPhoneDisplayed}`,
            n = cacheHelper.get(t);
        if (n && n.click >= 1)
            if (n.sessionId != u()) setTimeout(b(), 3e4);
            else {
                let t = new Date,
                    i = new Date(n.firstTimeClick),
                    r = new Date(i.getTime() + 45e3);
                t > r && b()
            }
    }

    function e() {
        return new Promise((n, t) => {
            (function i(r) {
                window.cacheHelper ? n() : r ? setTimeout(function() {
                    i(r - 1)
                }, 500) : t("Notfound cacheHelper")
            })(20)
        })
    }
    let s = {};
    const i = {
            Dismiss: "dismiss",
            PageViewed: "page-viewed",
            SrpLdpViewed: "srp-ldp-viewed",
            Searched: "searched",
            LvPhoneDisplayed: "lv-phone-displayed"
        },
        a = {
            Home: "home",
            Srp: "srp",
            Ldp: "ldp",
            Nlcc: "nlcc"
        },
        h = 259200,
        k = 5;
    let v = [];
    const r = {
        Id: "bounce-rate",
        ViewedExpireInMinutes: 1440,
        DiffTimeFromBotToTopThreshold: 250,
        Pages: ["srp", "ldp", ]
    };
    n.init = d;
    n.displaySurveyPopup = w;
    n.pageViewed = () => {
        e().then(() => {
            nt();
            let n = l();
            switch (n) {
                case a.Srp:
                case a.Ldp:
                    tt()
            }
        })
    };
    n.searched = it;
    n.handleLVPhoneDisplayed = o
})(window.Survey || (window.Survey = {}));