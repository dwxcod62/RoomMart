function _getNewStatsInfo() {
    var n = (new Date).getTime(),
        t = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(n) {
            var t = Math.random() * 16 | 0,
                i = n == "x" ? t : t & 3 | 8;
            return i.toString(16)
        });
    return n + "," + t
}

function Start() {
    var t, r, i, n;
    if ($(".stat").length > 0) {
        try {
            if (typeof Storage != "undefined") {
                if (t = CryptoJS.MD5(window.location.href + "." + document.referrer), r = window.sessionStorage.getItem("hash"), t == r && (hashtime = new Date(parseFloat(window.sessionStorage.getItem("hashtime"))), new Date - hashtime < 2e4)) return;
                window.sessionStorage.setItem("hash", t);
                window.sessionStorage.setItem("hashtime", (new Date).getTime())
            }
        } catch (u) {}
        i = "undefined";
        n = "undefined";
        (new CommonJS.Common).GetCurrentUserInfo(t => {
            var y = t ? 1 : 0,
                u, h, e, r, f, c, a, v;
            if ($("#hidSecretkey").length > 0 && $("#hidInfo").length > 0) {
                if (i = $("#hidSecretkey").val(), n = $("#hidInfo").val(), u = getCookie("statsinfo"), u == null) u = _getNewStatsInfo(), setCookie("statsinfo", u, 365);
                else {
                    try {
                        var l = u.split(","),
                            o = l[0],
                            p = l[1],
                            s = new Date(parseInt(o));
                        s.setMinutes(s.getMinutes() + 20);
                        s < new Date && (o = (new Date).getTime());
                        u = o + "," + p
                    } catch (w) {
                        u = _getNewStatsInfo()
                    }
                    setCookie("statsinfo", u, 365)
                }
                n = n + "," + y + "," + u
            }
            try {
                for (h = $(".stat"), e = [], r = 0; r < h.length; r++) e[r] = $(h[r]).attr("ct");
                for (e = jQuery.unique1(e), r = 0; r < e.length; r++) {
                    if (f = "", c = "-1", $(".stat[ct=" + e[r] + "][ac=2]").each(function() {
                            f += "," + $(this).attr("cid")
                        }), f.length > 0 && (f = f.substring(1), c = e[r]), f == "" && (f = 0), f == 0 && n == "undefined") return;
                    a = $("#staticDomain").attr("statsdomain") + "/StatisticServiceLibrary/fullinfo/" + f + "/" + c + "/" + n + "/" + i;
                    v = new Image;
                    v.src = a
                }
            } catch (b) {}
        })
    }
}(function(n) {
    var t = n.unique1;
    t == undefined && (t = n.unique, n.unique1 = function(i) {
        return i[0].nodeType ? t.apply(this, arguments) : n.grep(i, function(t, r) {
            return t != "" && n.inArray(t, i) === r
        })
    })
})(jQuery);
var CryptoJS = CryptoJS || function(n, t) {
    var r = {},
        u = r.lib = {},
        f = u.Base = function() {
            function n() {}
            return {
                extend: function(t) {
                    n.prototype = this;
                    var i = new n;
                    return t && i.mixIn(t), i.$super = this, i
                },
                create: function() {
                    var n = this.extend();
                    return n.init.apply(n, arguments), n
                },
                init: function() {},
                mixIn: function(n) {
                    for (var t in n) n.hasOwnProperty(t) && (this[t] = n[t]);
                    n.hasOwnProperty("toString") && (this.toString = n.toString)
                },
                clone: function() {
                    return this.$super.extend(this)
                }
            }
        }(),
        i = u.WordArray = f.extend({
            init: function(n, i) {
                n = this.words = n || [];
                this.sigBytes = i != t ? i : 4 * n.length
            },
            toString: function(n) {
                return (n || c).stringify(this)
            },
            concat: function(n) {
                var i = this.words,
                    r = n.words,
                    u = this.sigBytes,
                    n = n.sigBytes,
                    t;
                if (this.clamp(), u % 4)
                    for (t = 0; t < n; t++) i[u + t >>> 2] |= (r[t >>> 2] >>> 24 - 8 * (t % 4) & 255) << 24 - 8 * ((u + t) % 4);
                else if (65535 < r.length)
                    for (t = 0; t < n; t += 4) i[u + t >>> 2] = r[t >>> 2];
                else i.push.apply(i, r);
                return this.sigBytes += n, this
            },
            clamp: function() {
                var i = this.words,
                    t = this.sigBytes;
                i[t >>> 2] &= 4294967295 << 32 - 8 * (t % 4);
                i.length = n.ceil(t / 4)
            },
            clone: function() {
                var n = f.clone.call(this);
                return n.words = this.words.slice(0), n
            },
            random: function(t) {
                for (var r = [], u = 0; u < t; u += 4) r.push(4294967296 * n.random() | 0);
                return i.create(r, t)
            }
        }),
        e = r.enc = {},
        c = e.Hex = {
            stringify: function(n) {
                for (var r, u = n.words, n = n.sigBytes, i = [], t = 0; t < n; t++) r = u[t >>> 2] >>> 24 - 8 * (t % 4) & 255, i.push((r >>> 4).toString(16)), i.push((r & 15).toString(16));
                return i.join("")
            },
            parse: function(n) {
                for (var r = n.length, u = [], t = 0; t < r; t += 2) u[t >>> 3] |= parseInt(n.substr(t, 2), 16) << 24 - 4 * (t % 8);
                return i.create(u, r / 2)
            }
        },
        s = e.Latin1 = {
            stringify: function(n) {
                for (var r = n.words, n = n.sigBytes, i = [], t = 0; t < n; t++) i.push(String.fromCharCode(r[t >>> 2] >>> 24 - 8 * (t % 4) & 255));
                return i.join("")
            },
            parse: function(n) {
                for (var r = n.length, u = [], t = 0; t < r; t++) u[t >>> 2] |= (n.charCodeAt(t) & 255) << 24 - 8 * (t % 4);
                return i.create(u, r)
            }
        },
        l = e.Utf8 = {
            stringify: function(n) {
                try {
                    return decodeURIComponent(escape(s.stringify(n)))
                } catch (t) {
                    throw Error("Malformed UTF-8 data");
                }
            },
            parse: function(n) {
                return s.parse(unescape(encodeURIComponent(n)))
            }
        },
        o = u.BufferedBlockAlgorithm = f.extend({
            reset: function() {
                this._data = i.create();
                this._nDataBytes = 0
            },
            _append: function(n) {
                "string" == typeof n && (n = l.parse(n));
                this._data.concat(n);
                this._nDataBytes += n.sigBytes
            },
            _process: function(t) {
                var f = this._data,
                    s = f.words,
                    u = f.sigBytes,
                    e = this.blockSize,
                    o = u / (4 * e),
                    o = t ? n.ceil(o) : n.max((o | 0) - this._minBufferSize, 0),
                    t = o * e,
                    u = n.min(4 * t, u),
                    r;
                if (t) {
                    for (r = 0; r < t; r += e) this._doProcessBlock(s, r);
                    r = s.splice(0, t);
                    f.sigBytes -= u
                }
                return i.create(r, u)
            },
            clone: function() {
                var n = f.clone.call(this);
                return n._data = this._data.clone(), n
            },
            _minBufferSize: 0
        }),
        h;
    return u.Hasher = o.extend({
        init: function() {
            this.reset()
        },
        reset: function() {
            o.reset.call(this);
            this._doReset()
        },
        update: function(n) {
            return this._append(n), this._process(), this
        },
        finalize: function(n) {
            return n && this._append(n), this._doFinalize(), this._hash
        },
        clone: function() {
            var n = o.clone.call(this);
            return n._hash = this._hash.clone(), n
        },
        blockSize: 16,
        _createHelper: function(n) {
            return function(t, i) {
                return n.create(i).finalize(t)
            }
        },
        _createHmacHelper: function(n) {
            return function(t, i) {
                return h.HMAC.create(n, i).finalize(t)
            }
        }
    }), h = r.algo = {}, r
}(Math);
(function(n) {
    function r(n, t, i, r, u, f, e) {
        return n = n + (t & i | ~t & r) + u + e, (n << f | n >>> 32 - f) + t
    }

    function u(n, t, i, r, u, f, e) {
        return n = n + (t & r | i & ~r) + u + e, (n << f | n >>> 32 - f) + t
    }

    function f(n, t, i, r, u, f, e) {
        return n = n + (t ^ i ^ r) + u + e, (n << f | n >>> 32 - f) + t
    }

    function e(n, t, i, r, u, f, e) {
        return n = n + (i ^ (t | ~r)) + u + e, (n << f | n >>> 32 - f) + t
    }
    var o = CryptoJS,
        i = o.lib,
        h = i.WordArray,
        i = i.Hasher,
        s = o.algo,
        t = [];
    (function() {
        for (var i = 0; 64 > i; i++) t[i] = 4294967296 * n.abs(n.sin(i + 1)) | 0
    })();
    s = s.MD5 = i.extend({
        _doReset: function() {
            this._hash = h.create([1732584193, 4023233417, 2562383102, 271733878])
        },
        _doProcessBlock: function(n, i) {
            for (var a, s, o = 0; 16 > o; o++) a = i + o, s = n[a], n[a] = (s << 8 | s >>> 24) & 16711935 | (s << 24 | s >>> 8) & 4278255360;
            for (var a = this._hash.words, s = a[0], h = a[1], c = a[2], l = a[3], o = 0; 64 > o; o += 4) 16 > o ? (s = r(s, h, c, l, n[i + o], 7, t[o]), l = r(l, s, h, c, n[i + o + 1], 12, t[o + 1]), c = r(c, l, s, h, n[i + o + 2], 17, t[o + 2]), h = r(h, c, l, s, n[i + o + 3], 22, t[o + 3])) : 32 > o ? (s = u(s, h, c, l, n[i + (o + 1) % 16], 5, t[o]), l = u(l, s, h, c, n[i + (o + 6) % 16], 9, t[o + 1]), c = u(c, l, s, h, n[i + (o + 11) % 16], 14, t[o + 2]), h = u(h, c, l, s, n[i + o % 16], 20, t[o + 3])) : 48 > o ? (s = f(s, h, c, l, n[i + (3 * o + 5) % 16], 4, t[o]), l = f(l, s, h, c, n[i + (3 * o + 8) % 16], 11, t[o + 1]), c = f(c, l, s, h, n[i + (3 * o + 11) % 16], 16, t[o + 2]), h = f(h, c, l, s, n[i + (3 * o + 14) % 16], 23, t[o + 3])) : (s = e(s, h, c, l, n[i + 3 * o % 16], 6, t[o]), l = e(l, s, h, c, n[i + (3 * o + 7) % 16], 10, t[o + 1]), c = e(c, l, s, h, n[i + (3 * o + 14) % 16], 15, t[o + 2]), h = e(h, c, l, s, n[i + (3 * o + 5) % 16], 21, t[o + 3]));
            a[0] = a[0] + s | 0;
            a[1] = a[1] + h | 0;
            a[2] = a[2] + c | 0;
            a[3] = a[3] + l | 0
        },
        _doFinalize: function() {
            var i = this._data,
                t = i.words,
                n = 8 * this._nDataBytes,
                r = 8 * i.sigBytes;
            for (t[r >>> 5] |= 128 << 24 - r % 32, t[(r + 64 >>> 9 << 4) + 14] = (n << 8 | n >>> 24) & 16711935 | (n << 24 | n >>> 8) & 4278255360, i.sigBytes = 4 * (t.length + 1), this._process(), i = this._hash.words, t = 0; 4 > t; t++) n = i[t], i[t] = (n << 8 | n >>> 24) & 16711935 | (n << 24 | n >>> 8) & 4278255360
        }
    });
    o.MD5 = i._createHelper(s);
    o.HmacMD5 = i._createHmacHelper(s)
})(Math);
$(function() {
    var n = /MSIE (\d+\.\d+);/.test(navigator.userAgent);
    n ? setTimeout(function() {
        Start()
    }, 2e3) : setTimeout(Start(), 1e3)
});