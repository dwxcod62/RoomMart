(function(n) {
    async function v() {
        if (window.userServices) {
            window.userServices.clearCurrentUserInfoCache();
            const n = await window.userServices.getCurrentUserInfo();
            if (n !== null && n !== undefined) {
                let t = u();
                t && t.identify(n.userid, {
                    loginFrom: "Consumer"
                })
            }
        }
    }
    async function t(n, t, r, f) {
        let e = u();
        e && e.track(n, t || {}, i(i({}, r), {
            context: i(i({}, (r === null || r === void 0 ? void 0 : r.context) || {}), {
                typewriter: {
                    language: "javascript",
                    version: ""
                }
            })
        }), f)
    }
    async function y(n, i) {
        await t(e, n, i)
    }
    async function p(n, i) {
        await t(o, n, i)
    }
    async function w(n) {
        let i = r();
        if (i && i.products) {
            const r = i.products.find(t => t.productId == n);
            if (r) {
                const n = {
                    eventData: {
                        intent: r.intent,
                        pageType: r.pageType,
                        productId: r.productId
                    },
                    metaData: {
                        projectId: r.projectId,
                        vipType: r.vipType,
                        verified: r.verified,
                        expired: r.expired,
                        cateId: r.cateId,
                        cityCode: r.cityCode,
                        districtId: r.districtId,
                        wardId: r.wardId,
                        streetId: r.streetId,
                        pageId: r.pageId
                    }
                };
                await t(s, n)
            }
        }
    }
    async function b(n) {
        let i = r();
        if (i && i.products) {
            const r = i.products.find(t => t.productId == n);
            if (r) {
                const n = {
                    eventData: {
                        intent: r.intent,
                        pageType: r.pageType,
                        productId: r.productId
                    },
                    metaData: {
                        projectId: r.projectId,
                        vipType: r.vipType,
                        verified: r.verified,
                        expired: r.expired,
                        cateId: r.cateId,
                        cityCode: r.cityCode,
                        districtId: r.districtId,
                        wardId: r.wardId,
                        streetId: r.streetId,
                        pageId: r.pageId
                    }
                };
                await t(h, n)
            }
        }
    }
    async function k(n) {
        let i = r();
        if (i && i.products) {
            const r = i.products.find(t => t.productId == n);
            if (r) {
                const n = {
                    eventData: {
                        intent: r.intent,
                        pageType: r.pageType,
                        productId: r.productId
                    },
                    metaData: {
                        projectId: r.projectId,
                        vipType: r.vipType,
                        verified: r.verified,
                        expired: r.expired,
                        cateId: r.cateId,
                        cityCode: r.cityCode,
                        districtId: r.districtId,
                        wardId: r.wardId,
                        streetId: r.streetId,
                        pageId: r.pageId
                    }
                };
                await t(c, n)
            }
        }
    }
    async function d(n) {
        let i = r();
        if (i && i.products) {
            const r = i.products.find(t => t.productId == n);
            if (r) {
                const n = {
                    eventData: {
                        intent: r.intent,
                        pageType: r.pageType,
                        productId: r.productId
                    },
                    metaData: {
                        projectId: r.projectId,
                        vipType: r.vipType,
                        verified: r.verified,
                        expired: r.expired,
                        cateId: r.cateId,
                        cityCode: r.cityCode,
                        districtId: r.districtId,
                        wardId: r.wardId,
                        streetId: r.streetId,
                        pageId: r.pageId
                    }
                };
                await t(l, n)
            }
        }
    }
    async function g(n) {
        let i = r();
        if (i && i.products) {
            const r = i.products.find(t => t.productId == n);
            if (r) {
                const n = {
                    eventData: {
                        intent: r.intent,
                        pageType: r.pageType,
                        productId: r.productId
                    },
                    metaData: {
                        projectId: r.projectId,
                        vipType: r.vipType,
                        verified: r.verified,
                        expired: r.expired,
                        cateId: r.cateId,
                        cityCode: r.cityCode,
                        districtId: r.districtId,
                        wardId: r.wardId,
                        streetId: r.streetId,
                        pageId: r.pageId
                    }
                };
                await t(a, n)
            }
        }
    }
    const f = "Element Impression",
        e = "Search",
        o = "NewSearch",
        s = "LeadPhone",
        h = "LeadRequestCallBack",
        c = "LeadSms",
        l = "LeadEmail",
        a = "LeadZalo",
        u = function() {
            return window.analytics
        },
        r = function() {
            return window.pageTrackingData
        },
        nt = function() {
            return window.userServices && window.userServices.currentUserInfo
        };
    var i = this && this.__assign || function() {
        return i = Object.assign || function(n) {
            for (let t, i = 1, r = arguments.length; i < r; i++) {
                t = arguments[i];
                for (let i in t) Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i])
            }
            return n
        }, i.apply(this, arguments)
    };
    n.Identify = v;
    n.Search = y;
    n.NewSearch = p;
    n.LeadPhone = w;
    n.LeadRequestCallBack = b;
    n.LeadSms = k;
    n.LeadEmail = d;
    n.LeadZalo = g
})(window.SegmentClient || (window.SegmentClient = {}));