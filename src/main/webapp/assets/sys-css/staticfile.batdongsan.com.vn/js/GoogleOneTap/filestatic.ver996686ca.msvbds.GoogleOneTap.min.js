(function(n) {
    function u(n) {
        !n || (r = n)
    }

    function f(n, r, u, f, e) {
        n.credential && (console.log("test google one tap login"), cm.AjaxWrapperWithPromise({
            type: "POST",
            url: r + "?idToken=" + n.credential,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function() {
                t()
            }
        }).then(function(r) {
            if (r.isSuccess) {
                var u = new Promise(n => {
                    (function t() {
                        if (cacheHelper) {
                            var u = $(".js__google-one-tap").attr("tracking-label");
                            u += r.isRegister ? ",atype=new" : ",atype=old";
                            cacheHelper.set(i, u, 5);
                            n()
                        } else setTimeout(t, 100)
                    })()
                });
                u.then(() => {
                    if (f === "true") {
                        console.log("test mobile");
                        console.log(e);
                        var t = s(n.credential);
                        e === !0 ? window.FrontEnd && window.FrontEnd.Product && window.FrontEnd.Product.SaveSearchAlert ? (new FrontEnd.Product.SaveSearchAlert).SendRequestWithAuth("v2", t.email, !0) : setTimeout(callFunction, 100) : FrontEnd_Product_SaveSearchAlert ? FrontEnd_Product_SaveSearchAlert.SendRequestWithAuth("v3", t.email, !0) : setTimeout(callFunction, 100)
                    } else window.location.reload(!0)
                })
            } else t()
        }))
    }

    function e(n) {
        var t = new Promise(n => {
            (function t() {
                if (cacheHelper) {
                    var r = cacheHelper.get(i);
                    cacheHelper.remove(i);
                    n(r)
                } else setTimeout(t, 100)
            })()
        });
        t.then(t => {
            t && (t += `,uid=${n.userid}`, $(".js__google-one-tap").attr("tracking-label", t), $(".js__google-one-tap").click())
        })
    }

    function o(n, i) {
        let r = new CommonJS.Common,
            u = {
                accessToken: n
            },
            f = document.getElementById("staticDomain").getAttribute("data-content");
        r.AjaxWrapperWithPromise({
            type: "POST",
            url: i + "?accessToken=" + n,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            error: function() {
                t()
            }
        }).then(function(n) {
            n.isSuccess ? window.location.reload(!0) : t()
        })
    }

    function s(n) {
        var t = n.split(".")[1],
            i = t.replace(/-/g, "+").replace(/_/g, "/"),
            r = decodeURIComponent(atob(i).split("").map(function(n) {
                return "%" + ("00" + n.charCodeAt(0).toString(16)).slice(-2)
            }).join(""));
        return JSON.parse(r)
    }

    function t() {
        let n = new CommonJS.Common,
            t = document.getElementById("staticDomain").getAttribute("data-cssserver"),
            i = `<div class="sending_img"><img src="${t}/images/contacts/not-send.svg"></div>
                                    <div class="sending_code">Rất tiếc!</div>
                                    <div class="sending_msg">Đã có lỗi xảy ra, vui lòng thực hiện lại.</div>`,
            r = {
                classContent: `new2021 form-col-1 static`,
                classHeader: "modal-header",
                style: "static",
                title: `<div class="title"></div>`,
                content: i,
                width: 344,
                keepBodyScroll: !1,
                buttons: [{
                    text: "OK",
                    id: "btnCancel",
                    "class": n.GetStyleClass("btn", "btn-pr-solid--md"),
                    eventHandle: function() {
                        n.ModalEvent($("#dialogPopup"), "hide")
                    }
                }]
            };
        n.ShowDialog(r);
        n.RecenterModal()
    }
    let i = "GOT_TRACKING_LABEL",
        r = {};
    n.Initialize = u;
    n.HandleCredentialResponse = f;
    n.SendTracking = e
})(window.GoogleOneTap || (window.GoogleOneTap = {}));