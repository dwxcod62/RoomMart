(function(n) {
    (function t(i) {
        n.ListingSearchFilterSelectionController && n.ListingSearchTagController && n.ListingSearchHistoryHelper && n.SearchingHistoriesServicesLocationFocus && n.YourLocationServices && n.SearchingSuggestionServices && document.querySelectorAll("script[searching-suggestions-service-params]").length && n.LocationsServices && n.SearchingTrackingService ? i.ListingSearchBox = function(t) {
            function tr() {
                document.querySelector("body").classList.add("loading-body")
            }

            function cu() {
                a.AddClickResetEvent(e);
                v.AddClickResetEvent(e);
                l.AddClickResetEvent(e);
                b.AddClickResetEvent(e);
                y.AddClickResetEvent(e);
                p.AddClickResetEvent(e);
                w.AddClickResetEvent(e)
            }

            function lu(n, t) {
                const r = document.querySelector(".ui-autocomplete");
                if (t.item && t.item.label && t.item.label.length) return !1;
                let i;
                return r.querySelectorAll("li.js__search-selection").forEach(n => {
                    n.classList.remove("ui-state-focus"), n.textContent === (t.item && t.item.FullName) && (i = n)
                }), i ? i.classList.add("ui-state-focus") : null, !1
            }

            function kt() {
                var n = a.GetValue(),
                    t = y.GetValue(),
                    i = b.GetValue(),
                    r = p.GetValue() ? p.GetValue() : "";
                n.indexOf(";") >= 0 || t.indexOf(";") >= 0 || i.indexOf(";") >= 0 || r.indexOf(";") >= 0 ? au() : vu()
            }

            function au() {
                var n = a.GetSearchButton(),
                    i = v.GetSearchButton(),
                    r = l.GetSearchButton(),
                    u = y.GetSearchButton();
                n && (n.setAttribute("tracking-id", t.TRACKING_CONSTANTS.TRACKING_ID), n.setAttribute("tracking-label", `loc=${t.TRACKING_CONSTANTS.TRACKING_LABEL_LOC}`));
                i && (i.setAttribute("tracking-id", t.TRACKING_CONSTANTS.TRACKING_ID), i.setAttribute("tracking-label", `loc=${t.TRACKING_CONSTANTS.TRACKING_LABEL_LOC}`));
                r && (r.setAttribute("tracking-id", t.TRACKING_CONSTANTS.TRACKING_ID), r.setAttribute("tracking-label", `loc=${t.TRACKING_CONSTANTS.TRACKING_LABEL_LOC}`));
                u && (u.setAttribute("tracking-id", t.TRACKING_CONSTANTS.TRACKING_ID), u.setAttribute("tracking-label", `loc=${t.TRACKING_CONSTANTS.TRACKING_LABEL_LOC}`));
                tt.forEach(n => {
                    n.setAttribute("tracking-id", t.TRACKING_CONSTANTS.TRACKING_ID), n.setAttribute("tracking-label", `loc=${t.TRACKING_CONSTANTS.TRACKING_LABEL_LOC}`)
                })
            }

            function vu() {
                var n = a.GetSearchButton(),
                    i = v.GetSearchButton(),
                    r = l.GetSearchButton(),
                    u = y.GetSearchButton();
                n && (n.removeAttribute("tracking-id"), n.removeAttribute("tracking-label"));
                i && (i.removeAttribute("tracking-id"), i.removeAttribute("tracking-label"));
                r && (r.removeAttribute("tracking-id"), r.removeAttribute("tracking-label"));
                u && (u.setAttribute("tracking-id", t.TRACKING_CONSTANTS.TRACKING_ID), u.setAttribute("tracking-label", `loc=${t.TRACKING_CONSTANTS.TRACKING_LABEL_LOC}`));
                tt.forEach(n => {
                    n.removeAttribute("tracking-id"), n.removeAttribute("tracking-label")
                })
            }

            function e(n) {
                (pu(), tr(), nr) || (nr = !0, vf(n), Promise.all([ne(n), bf(), ]), document.querySelector("form#boxSearchForm").submit())
            }

            function ir(n) {
                const t = i.querySelector(n);
                if (t && t.getAttribute("value").startsWith("[") && t.getAttribute("value").split(",").length === 2) {
                    const n = JSON.parse(t.getAttribute("value"));
                    n[0] === n[1] && t.setAttribute("value", `[null,${n[1]}]`)
                }
            }

            function pu() {
                ir("#PriceAsString");
                ir("#AreaAsString")
            }

            function ii(n = 2) {
                const t = document.querySelectorAll(".js__searching-selected");
                t && t[t.length - 1] && t[t.length - 1].classList.add("addBottomGap");
                let i = 0,
                    r = u.querySelectorAll(`li`),
                    f = 0;
                if (r.forEach(t => {
                        f < n ? t.classList.remove("hidden") : (t.classList.add("hidden"), i += 1), f++
                    }), r.length >= yt ? c.setAttribute("aria-label", `Tìm tối đa ${yt} khu vực, dự án`) : c.removeAttribute("aria-label"), i > 0) {
                    u.setAttribute("exceed-limited", !0);
                    const t = `+${i} khu vực`,
                        n = u.querySelector("#summary-choice");
                    n && n.remove();
                    u.insertAdjacentHTML("beforeend", `<span id="summary-choice" class="location-tag__choice"><a><span id="summary-tag">${t}</span></a></span>`)
                } else {
                    u.setAttribute("exceed-limited", !1);
                    const n = u.querySelector("#summary-choice");
                    n && n.remove()
                }
            }

            function wu() {
                for (const n in k) {
                    ut.getElementsByClassName(`text${n}`)[0].addEventListener("mouseover", () => k[n].selected || k[n].el.classList.add("pieSegment-hover"));
                    ut.getElementsByClassName(`text${n}`)[0].addEventListener("mouseleave", () => k[n].el.classList.remove("pieSegment-hover"));

                    function t() {
                        k[n].el.classList.toggle("pieSegment-selected");
                        ut.getElementsByClassName(`text${n}`)[0].classList.toggle("text-selected");
                        ut.getElementsByClassName(`text${n}`)[0].classList.toggle("re__checked")
                    }
                    ut.getElementsByClassName(`text${n}`)[0].addEventListener("click", t);
                    k[n].el.addEventListener("click", t)
                }
            }

            function rr(n, t) {
                var i = t.item,
                    y, e, v, s;
                if (wt = h.value, i != undefined) {
                    var r = "",
                        l = i.Name,
                        a = 0;
                    let n = i.CityCode;
                    if (i.Type == o.District && (r = i.DistrictId, l = i.DistrictName ? i.DistrictName : i.Name), i.Type == o.Street && (a = i.DistrictId, r = "".concat(i.StreetId, "_", i.DistrictId), l = i.DistrictName && i.StreetName ? "".concat(i.StreetName, ", ", i.DistrictName) : i.Name), i.Type == o.Ward && (a = i.DistrictId, r = "".concat(i.WardId, "_", i.DistrictId), l = i.DistrictName && i.WardName ? "".concat(i.WardName, ", ", i.DistrictName) : i.Name), i.Type == o.Project && (a = i.DistrictId, r = "".concat(i.ProjectId, "_", i.DistrictId)), y = u.querySelector(`li[data-search-value="${r}"]`), e = u.querySelectorAll(`li`).length, y == undefined && e < 5)
                        if (f.value != n && (u.replaceChildren(), u.setAttribute("exceed-limited", !1), c.removeAttribute("aria-label"), f.value = n, g.querySelector(".js__listing-search-select-button-current-text").textContent = i.CityName), v = u.querySelectorAll(`li[data-search-value*="_${r}"]`), i.Type == o.District && v.length > 0 && (v.forEach(n => {
                                n.remove()
                            }), ur()), s = u.querySelector(`li[data-search-value="${a}"]`), s == undefined) {
                            const n = u.getAttribute("exceed-limited");
                            e = u.querySelectorAll(`li`).length;
                            $(`<li class="location-tag__choice ${n==="true"?"hidden":""}" data-search-value=${r} data-location-type=${i.Type}>
                                        <a>
                                            <span>${l}</span>
                                        </a>
                                        <input id="Locations_${e}__LocationType" name="Locations[${e}].LocationType" class="js__LocationType" type="hidden" value="${i.Type}">
                                        <input id="Locations_${e}__Value" name="Locations[${e}].Value" type="hidden" class="js__Value" value="${r}">
                                    </li>`).data("ui-autocomplete-item", t.item).appendTo($(u));
                            ii()
                        } else s.setAttribute("data-location-type", i.Type), s.querySelector(".js__LocationType").value = i.Type, s.setAttribute("data-search-value", r), s.querySelector(".js__Value").value = r, s.querySelector("a>span").innerHTML = `${l}`;
                    if (i.Position) {
                        let n = i.TrackingType === nt.HINT ? wt : "";
                        br(i.TrackingType, i.Position, n)
                    }
                }
            }

            function bu(n, t) {
                let i = n.toElement || n.srcElement;
                if (i != null && i.closest("li") && i.closest("li").className.indexOf("js__search-selection") >= 0) rr(n, t);
                else return n.preventDefault(), !1
            }

            function ku() {
                et(!0);
                dt();
                vt.SendTrackingDataLayer("open-search-suggestion");
                const n = i.querySelectorAll(".re__searching-selected");
                for (let t = 0; t < n.length; t++) t < n.length - 1 ? n[t].classList.remove("addBottomGap") : n[t].classList.add("addBottomGap");
                return i.classList.contains("fix") && i.classList.add("adjustTopPosition"), i.querySelector(".re__icon-chevron-down--sm").classList.add("re__rotate"), i.classList.remove(r.SHOW_CITY_SELECT_DROPDOWN), i.classList.add(r.SHOW_LOCATION_SELECT_DROPDOWN), rt(hi, r.SHOW_FADE_IN), i.querySelector(".re__icon-chevron-down--sm") && i.querySelector(".re__icon-chevron-down--sm").classList.remove("re__rotate"), ui(), !1
            }

            function du() {
                return i.getAttribute("fetching") === "true" ? !1 : (c.removeAttribute("aria-label"), h.value = "", $(u).find("li").length > 0 && c.classList.remove("re__location-input"), i.classList.remove(r.SHOW_LOCATION_SELECT_DROPDOWN), i.classList.remove("adjustTopPosition"), i.classList.remove("adjustTopPositionNoCity"), or(), !1)
            }

            function gu(n, r) {
                var e = [],
                    l = 0,
                    v = 10;
                let y = u.querySelectorAll(`li`);
                if (y && y.length > 0 && y.forEach(n => {
                        if (n) {
                            let t = n.querySelector("a>span"),
                                i = t ? t.innerHTML : "",
                                r = n.getAttribute("data-search-value"),
                                u = n.getAttribute("data-location-type");
                            e.push({
                                type: d.SEARCHING_SELECTED,
                                label: i,
                                id: r,
                                value: i,
                                data: {
                                    LocationLevel: u
                                }
                            });
                            l++
                        }
                    }), l >= yt ? c.setAttribute("aria-label", `Tìm tối đa ${yt} khu vực, dự án`) : c.removeAttribute("aria-label"), !n.term || n.term.length == undefined || l >= 5) {
                    let n = a.GetValue(),
                        i = n;
                    n.indexOf(",") >= 0 && (i = n.slice(0, n.indexOf(",")));
                    gt.getPopularSuggestions({
                        apiPopularSuggestion: t.API_POPULAR_SEARCH,
                        productType: +s.value,
                        cateId: i,
                        cityCode: f.value,
                        size: v
                    }).then(function(n) {
                        for (var t, u = [], i = 0; i < n.length; i++) t = n[i], t.Position = i + 1, t.TrackingType = nt.POPULAR, u.push({
                            type: d.SEARCHING_POPULAR,
                            label: t.FullName,
                            id: i,
                            value: t.Value,
                            data: t
                        });
                        u.length <= 0 && u.push({
                            type: d.SEARCHING_POPULAR,
                            label: "Chưa có kết quả tìm kiếm phổ biến phù hợp",
                            id: 0,
                            value: ""
                        });
                        e = e.concat(u);
                        r(e);
                        const f = document.querySelectorAll(".js__search-selection");
                        h.value.length && f && f[0].classList.add("ui-state-focus")
                    })
                } else i.setAttribute("fetching", !0), gt.getLocationSuggestions({
                    keyword: n.term,
                    productType: +s.value,
                    cityCode: f.value,
                    size: v
                }).then(function(n) {
                    var u = [],
                        t = 0;
                    n.forEach(n => {
                        t < v && !(n.LocationLevel == o.City && n.CityCode == f.value) && (n.Position = t + 1, n.TrackingType = nt.HINT, u.push({
                            type: d.SEARCHING_ITEM,
                            label: n.FullName,
                            id: n.ScopeId,
                            value: n.FullName,
                            data: n
                        }), t++)
                    });
                    e = e.concat(u);
                    r(e);
                    i.setAttribute("fetching", !1);
                    const s = document.querySelectorAll(".js__search-selection");
                    h.value.length && s && s[0].classList.add("ui-state-focus")
                })
            }

            function nf(n, t) {
                var i = this,
                    r = [],
                    u = [],
                    f = [],
                    e = [];
                if (t.forEach(function(n) {
                        n.type == d.SEARCHING_SELECTED ? f.push(n) : n.type == d.SEARCHING_POPULAR ? r.push(n) : n.type == d.SEARCHING_HISTORY ? u.push(n) : e.push(n)
                    }), f.length > 0) {
                    let t = $(`<span class="re__delete-all">Xóa tất cả</span>`).on("click", ri).on("click", te),
                        r = $(`<div class='re__action'></div>`).append(`<span>Đang chọn</span>`).append(t);
                    $(`<li class="ui-menu-divider re__ui-menu-divider"></li>`).data("ui-autocomplete-item", {
                        label: "Đang chọn",
                        value: "Đang chọn"
                    }).append(r).appendTo(n);
                    f.forEach(function(t) {
                        i._renderItem(n, t)
                    })
                }
                e.length > 0 ? ($(`<li class="js__ui-menu-divider ui-menu-divider"></li>`).data("ui-autocomplete-item", {
                    label: "Gợi ý tìm kiếm",
                    value: "Gợi ý tìm kiếm"
                }).append(`Gợi ý tìm kiếm`).appendTo(n), e.forEach(function(t) {
                    i._renderItem(n, t)
                })) : u.length > 0 ? ($(`<li class="js__ui-menu-divider ui-menu-divider"></li>`).data("ui-autocomplete-item", {
                    label: "Tìm kiếm gần đây",
                    value: "Tìm kiếm gần đây"
                }).append(`Tìm kiếm gần đây`).appendTo(n), u.forEach(function(t) {
                    i._renderItem(n, t)
                })) : r.length > 0 && ($(`<li class="js__ui-menu-divider ui-menu-divider"></li>`).data("ui-autocomplete-item", {
                    label: "Tìm kiếm phổ biến",
                    value: "Tìm kiếm phổ biến"
                }).append(`Tìm kiếm phổ biến`).appendTo(n), r.forEach(function(t) {
                    i._renderItem(n, t)
                }))
            }

            function tf(n, t) {
                let r = $(`<i class="re__icon-close-no-circle"></i>`).on("click", ff),
                    i = $(`<a class="selected-tag-link"></a>`);
                return i.append(`<i class="re__${t&&t.data&&t.data.LocationLevel==o.Project?"icon-apartment--sm":"icon-location--sm"}"></i>
                            <span>${t.label}</span>
                        `).append(r), $(`<li class="js__searching-selected re__searching-selected ui-menu-divider" data-search-value="${t.id}"></li>`).data("ui-autocomplete-item", t).append(i).appendTo(n)
            }

            function rf(n, t) {
                if (t) {
                    if (t.data) {
                        let r = t && t.data && t.data.Highlight && t.data.Highlight.length ? t.data.Highlight : "",
                            i = t.data.FullName ? t.data.FullName : t.label;
                        return i = i.replace(r, `<span class="re__location-keyword">${r}</span>`), $(`<li class="js__search-selection"></li>`).data("ui-autocomplete-item", t.data).append(`<a><i class="re__${t.data.Type==o.Project?"icon-apartment--sm":"icon-location--sm"}"></i><span>${i}</span></a>`).appendTo(n)
                    }
                    let i = t.label;
                    return $(`<li class="suggestion-item-empty ui-menu-divider"></li>`).append(`<span>${i}</span>`).appendTo(n)
                }
            }

            function uf(n, t) {
                return t.type === d.SEARCHING_SELECTED ? tf(n, t) : rf(n, t, this.term)
            }

            function ff(n) {
                let f = n.toElement || n.srcElement,
                    t = f.closest(".js__searching-selected"),
                    i = t.closest(`ul`);
                var e = t.getAttribute("data-search-value");
                u.querySelector(`li[data-search-value="${e}"]`).remove();
                t.remove();
                i.querySelectorAll(".js__searching-selected").length <= 0 && i.querySelector(".re__ui-menu-divider").remove();
                ur();
                ii();
                let o = n.target.parentElement.children,
                    s = o[0].classList.contains(r.ICON_LOCATION_SMALL);
                kr(nt.EVENT.REMOVE_SEARCH_TAG, s ? "location" : "project")
            }

            function ri(n) {
                if (u.replaceChildren(), u.setAttribute("exceed-limited", !1), c.removeAttribute("aria-label"), n && (n.srcElement || n.target)) {
                    let t = n && n.srcElement ? n.srcElement : n.target,
                        i = t.closest(`ul`);
                    const r = i.querySelectorAll(".js__searching-selected");
                    r.forEach(n => {
                        n.remove()
                    });
                    t.closest(`li`).remove()
                }
            }

            function ur() {
                var n = 0;
                for (let t = 0; t < u.children.length; t++)
                    if (u.children[t] && u.children[t].nodeName === "LI") {
                        let i = u.children[t].querySelector(".js__LocationType");
                        i.setAttribute("id", `Locations_${n}__LocationType`);
                        i.setAttribute("name", `Locations[${n}].LocationType`);
                        i.setAttribute("exceed-limited", !1);
                        let r = u.children[t].querySelector(".js__Value");
                        r.setAttribute("id", `Locations_${n}__Value`);
                        r.setAttribute("name", `Locations[${n}].Value`);
                        r.setAttribute("exceed-limited", !1);
                        n++
                    }
            }

            function ef() {
                h.value === "" && $(h).autocomplete("search", "")
            }

            function of (n) {
                if (n.key === "ArrowDown") {
                    const t = document.querySelector(".ui-state-focus"),
                        i = t && t.classList.contains("ui-menu-divider");
                    if (!i && !t) return n.preventDefault(), n.stopPropagation(), !1
                }
                if (n.key === "Enter") {
                    const n = document.querySelectorAll(".ui-state-focus"),
                        t = n && n[n.length - 1];
                    t && t.click()
                }
            }

            function et(n = false) {
                n ? pt = 0 : pt++
            }

            function fr() {
                return "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0
            }

            function sf() {
                g.addEventListener("mousedown", () => {
                    et(), pt > 1 ? st() : sr()
                });
                fr() && g.addEventListener("touchstart", () => {
                    et(), pt > 1 ? st() : sr()
                });
                let n = i.querySelectorAll(".js__city-search-select-dropdown .js__option");
                n.length > 0 && n.forEach(n => {
                    n.addEventListener("click", () => {
                        hf(n)
                    })
                })
            }

            function hf(n) {
                let t = n.getAttribute("value"),
                    i = n.querySelector("span").textContent;
                t && i && (f.value = t, g.querySelector(".js__listing-search-select-button-current-text").textContent = i);
                af();
                lf()
            }

            function cf(n) {
                const i = n.target,
                    r = window.getComputedStyle(i, ":after"),
                    u = window.getComputedStyle(i, ":before"),
                    t = r || u;
                if (t) {
                    const i = Number(t.getPropertyValue("top").slice(0, -2)),
                        e = Number(t.getPropertyValue("height").slice(0, -2)),
                        r = Number(t.getPropertyValue("left").slice(0, -2)),
                        o = Number(t.getPropertyValue("width").slice(0, -2)),
                        u = n.layerX,
                        f = n.layerY;
                    if (u > r && u < r + o && f > i && f < i + e) return !0
                }
            }

            function ot(n) {
                var t = n && n.target ? n.target : undefined;
                const f = t.classList.contains(r.CLOSE_ICON),
                    e = t.classList.contains(r.DELETE_ALL_BTN),
                    o = t.classList.contains(r.NO_CITY_CLOSE_BTN),
                    s = !i.contains(t),
                    h = !i.classList.contains(r.SHOW_CITY_SELECT_DROPDOWN) || !i.classList.contains(r.SHOW_NO_CITY_SELECT_DROPDOWN);
                (o && st(), e || f) || (s && h && (st(), u.children.length && c.classList.remove("re__location-input")), cf(n) && st())
            }

            function er(n = 0) {
                const o = ft ? 15 : 17,
                    t = document.body.querySelector(`#${r.RIGHT_BANNER}`),
                    i = document.body.querySelector(`#${r.LEFT_BANNER}`),
                    u = document.body.querySelector(`.${r.CHAT_CONTAINER}`),
                    f = document.body.querySelector(`${r.FEED_BACK}`),
                    e = document.body.querySelector(`#${r.GO_TO_TOP}`);
                let s = document.body.getAttribute("isAdjustedContentFlow");
                const h = t && window.getComputedStyle(t, null).getPropertyValue("left"),
                    c = i && window.getComputedStyle(i, null).getPropertyValue("left"),
                    l = u && window.getComputedStyle(u, null).getPropertyValue("right"),
                    a = f && window.getComputedStyle(f, null).getPropertyValue("right"),
                    v = e && window.getComputedStyle(e, null).getPropertyValue("right");
                if (n)
                    if (s === "false") t && t.style.setProperty("left", `${Number(h.replace("px",""))-8.5}px`, "important"), i && i.style.setProperty("left", `${Number(c.replace("px",""))-8.5}px`, "important"), u && u.style.setProperty("right", `${Number(l.replace("px",""))+o}px`, "important"), f && f.style.setProperty("right", `${Number(a.replace("px",""))+o}px`, "important"), e && e.style.setProperty("right", `${Number(v.replace("px",""))+o}px`, "important"), document.body.setAttribute("isAdjustedContentFlow", !0);
                    else return;
                else t && t.style.setProperty("left", null, ""), i && i.style.setProperty("left", null, ""), u && u.style.setProperty("right", null, ""), f && f.style.setProperty("right", null, ""), e && e.style.setProperty("right", null, ""), document.body.setAttribute("isAdjustedContentFlow", !1)
            }

            function ui() {
                const n = document.querySelector(`.${r.FIX}`),
                    t = document.querySelector(`.${r.OVERLAY}`);
                if (n && n.classList.add("addPaddingRight"), !t && ci) {
                    const n = document.createElement("div");
                    n.classList.add(r.OVERLAY);
                    ci.appendChild(n);
                    ft ? document.body.classList.add(r.NO_SCROLL_MAC) : document.body.classList.add(r.NO_SCROLL)
                }
                ft || li || er(1)
            }

            function or() {
                const n = document.querySelector(`.${r.FIX}`),
                    t = document.querySelector(`.${r.OVERLAY}`);
                n && n.classList.remove("addPaddingRight");
                t && t.remove();
                ft ? document.body.classList.remove(r.NO_SCROLL_MAC) : document.body.classList.remove(r.NO_SCROLL);
                ft || li || er()
            }

            function rt(n, t) {
                n && (n.classList.contains(t) ? n.getAnimations().forEach(n => {
                    n.cancel(), n.play()
                }) : n.classList.add(t))
            }

            function st() {
                et(!0);
                dt();
                i.classList.remove(r.SHOW_NO_CITY_SELECT_DROPDOWN);
                i.classList.remove(r.SHOW_CITY_SELECT_DROPDOWN);
                i.classList.remove(r.SHOW_LOCATION_SELECT_DROPDOWN);
                or();
                i.querySelector(".re__icon-chevron-down--sm") && i.querySelector(".re__icon-chevron-down--sm").classList.remove("re__rotate");
                i.classList.remove("adjustTopPosition");
                i.classList.remove("adjustTopPositionNoCity")
            }

            function lf() {
                ri();
                f.value ? (i.classList.add("re__search-has-location-input"), c.classList.add("re__location-input"), $(h).focus(), $(h).autocomplete("search", "")) : i.classList.remove("re__search-has-location-input")
            }

            function sr() {
                if (i.classList.contains("fix") && i.classList.add("adjustTopPosition"), i.querySelector(".re__icon-chevron-down--sm") && i.querySelector(".re__icon-chevron-down--sm").classList.add("re__rotate"), f.value) {
                    i.classList.remove(r.SHOW_LOCATION_SELECT_DROPDOWN);
                    i.classList.add(r.SHOW_CITY_SELECT_DROPDOWN);
                    rt(si, r.SHOW_FADE_IN);
                    ui();
                    const n = i.querySelectorAll(".js__city-search-select-dropdown .js__option");
                    n.forEach(n => {
                        n.getAttribute("value") === f.value ? n.classList.add("selected-item") : n.classList.remove("selected-item")
                    });
                    document.querySelector(".re__overlay").addEventListener("click", ot);
                    document.body.addEventListener("click", ot)
                } else i.classList.remove(r.SHOW_LOCATION_SELECT_DROPDOWN), i.classList.add(r.SHOW_NO_CITY_SELECT_DROPDOWN), i.classList.remove("adjustTopPosition"), i.classList.contains("fix") && i.classList.add("adjustTopPositionNoCity"), rt(nu, r.SHOW_FADE_IN), ui(), rt(si, r.SHOW_FADE_IN), i.querySelector(".js__listing-search-no-city-button-close").addEventListener("click", () => {
                    i.classList.remove(r.SHOW_NO_CITY_SELECT_DROPDOWN)
                });
                document.querySelector(".re__overlay").addEventListener("click", ot);
                document.body.addEventListener("click", ot)
            }

            function af() {
                et(!0);
                dt();
                i.querySelector(`.${r.CITY_ICON_SEARCH}`).classList.remove(r.ICON_SEARCH);
                i.querySelector(`.${r.CITY_ICON_SEARCH}`).classList.add(r.ICON_LOCATION);
                i.classList.contains("fix") && i.classList.add("adjustTopPosition");
                rt(hi, r.SHOW_FADE_IN);
                i.classList.remove(r.SHOW_CITY_SELECT_DROPDOWN);
                i.classList.remove(r.SHOW_NO_CITY_SELECT_DROPDOWN);
                i.classList.add(r.SHOW_LOCATION_SELECT_DROPDOWN);
                rt(tu, r.SHOW_FADE_IN);
                document.querySelector(".re__bg-header").addEventListener("click", ot)
            }

            function vf(n) {
                let t = fi(wr(n));
                (t.title !== "Nhà đất bán" && t.title !== "Nhà đất cho thuê" || t.price.min !== null || t.price.max !== null || t.price.level !== null || t.area.min !== null || t.area.max !== null || t.area.level !== null) && ni.AddSearchingHistory(t)
            }

            function ht() {
                var n = a.GetValue(),
                    t = a.GetTextOptionsSelected(!0).join(", "),
                    i = n ? n.split(";") : [];
                return {
                    ids: i,
                    label: t
                }
            }

            function yf() {
                let n = g.querySelector(".js__listing-search-select-button-current-text");
                var t = null,
                    i = null;
                return n && f && (i = f.value, t = n.textContent ? n.textContent : ""), {
                    code: i,
                    label: t
                }
            }

            function hr() {
                let n = u.querySelectorAll(`li`);
                var t = [];
                return n && n.length > 0 && n.forEach(n => {
                    if (n) {
                        var r = n.querySelector("a>span"),
                            i = {};
                        i.id = n.getAttribute("data-search-value");
                        i.label = r ? r.innerHTML : "";
                        i.locationType = n.getAttribute("data-location-type");
                        t.push(i)
                    }
                }), t
            }

            function cr() {
                var r = null,
                    u = null,
                    f = null,
                    t = v.GetTextOptionsSelected(!0).join(", "),
                    n = v.GetValue(),
                    i;
                return t = t.replace("≤", "Dưới").replace("<", "Dưới").replace("≥", "Trên").replace(">", "Trên").replace("Thỏa thuận", "Giá thỏa thuận"), n.startsWith("[") ? (i = JSON.parse(n), r = i[0], u = i[1]) : n && (f = +n), {
                    max: u,
                    min: r,
                    level: f,
                    label: t
                }
            }

            function lr() {
                var r = null,
                    u = null,
                    f = null,
                    t = l.GetTextOptionsSelected(!0).join(", "),
                    n = l.GetValue(),
                    i;
                return t = t.replace("≤", "Dưới").replace("<", "Dưới").replace("≥", "Trên").replace(">", "Trên"), n.startsWith("[") ? (i = JSON.parse(n), r = i[0], u = i[1]) : n && (f = +n), {
                    max: u,
                    min: r,
                    level: f,
                    label: t
                }
            }

            function ct() {
                var t = y.GetTextOptionsSelected(!0).join(", "),
                    n = y.GetValue(),
                    i = n ? n.split(";") : [];
                return {
                    ids: i,
                    label: t
                }
            }

            function lt() {
                var t = b.GetTextOptionsSelected(!0).join(", "),
                    n = b.GetValue(),
                    i = n ? n.split(";") : [];
                return {
                    ids: i,
                    label: t
                }
            }

            function at() {
                var t = p.GetTextOptionsSelected(!0).join(", "),
                    n = p.GetValue(),
                    i = n ? n.split(";") : [];
                return {
                    ids: i,
                    label: t
                }
            }

            function fi(n) {
                var t, i, u, f, e;
                let r = n ? n : !1;
                t = {};
                t.productType = s.value;
                t.category = r ? it.category : ht();
                t.city = yf();
                t.locations = hr();
                t.area = r ? it.area : lr();
                t.price = r ? it.price : cr();
                t.room = r ? it.room : ct();
                t.direction = r ? it.direction : lt();
                t.media = r ? it.media : at();
                let o = bt && bt.value && bt.value == "1" ? !0 : !1;
                return t.verification = o, i = "", t.locations.length > 0 && (u = [], t.locations.forEach(n => {
                    var t, r, i;
                    n.label && (t = n.label.trim(), r = t.split(","), r.length > 1 ? (i = [], r.forEach(n => {
                        yr(n) ? i.push(n.trim()) : i.push(n.replace("Quận", "").replace("Huyện", "").replace("Thị xã", "").replace("Thành phố", "").replace("Phường", "").replace("Xã", "").replace("Thị trấn", "").trim())
                    }), u.push(i.join(", "))) : (yr(t) || (t = t.replace("Quận", "").replace("Huyện", "").replace("Thị xã", "").replace("Thành phố", "").replace("Phường", "").replace("Xã", "").replace("Thị trấn", "").trim()), u.push(t)))
                }), i = u.join(", ")), i ? i = ` tại ${i}, ${t.city.label}` : t.city.code && (i = ` tại ${t.city.label}`), t.category.ids && t.category.ids.length > 0 ? (f = t.productType == 38 ? "Bán" : "Cho thuê", t.title = `${f} ${t.category.label}${i}`) : (e = t.productType == 38 ? "Nhà đất bán" : "Nhà đất cho thuê", t.title = `${e}${i}`), t.title = t.title.replace("Bán Bán", "Bán"), t
            }

            function pf() {
                const n = {};
                n.productType = +s.value;
                n.intent = +s.value == 38 ? "Sale" : "Rent";
                ht() && ht().ids && ht().ids.length > 0 && (n.cates = ht());
                n.cityCode = f.value;
                const u = {},
                    i = lr();
                if (i.level) {
                    let n = cm.GetAreaLevelValues(i.level, +s.value);
                    n.length === 2 && n[0] != null && n[1] != null && (n[0] === n[1] ? u.minArea = n[0] : (u.minArea = n[0], u.maxArea = n[1]))
                } else i.min && i.min !== 0 && (u.minArea = i.min), i.max && i.max !== 0 && (u.maxArea = i.max);
                n.area = u;
                const r = {},
                    t = cr();
                if (t.level != null && (r.negotiablePrice = t.level === 0), t.level) {
                    let n = cm.GetPriceLevelValues(t.level, +s.value);
                    n.length === 2 && n[0] != null && n[1] != null && (n[0] === n[1] ? r.minPrice = n[0] : (r.minPrice = n[0], r.maxPrice = n[1]))
                } else t.min && t.min !== 0 && (r.minPrice = t.min), t.max && t.max !== 0 && (r.maxPrice = t.max);
                n.price = r;
                ct() && ct().ids && ct().ids.length > 0 && (n.rooms = ct());
                lt() && lt().ids && lt().ids.length > 0 && (n.directions = lt());
                at() && at().ids && at().ids.length > 0 && (n.medias = at());
                const e = hr();
                if (e && e.length > 0) {
                    let t = [],
                        i = [],
                        r = [],
                        u = [];
                    e.forEach(n => {
                        let f = n.id.includes("_") ? n.id.split("_") : [n.id],
                            e = +n.locationType;
                        e === o.District ? t.push(+f[0]) : e !== o.District && f.length > 1 && t.push(+f[1]);
                        e === o.Ward && i.push(+f[0]);
                        e === o.Street && r.push(+f[0]);
                        e === o.Project && u.push(+f[0])
                    });
                    t.length > 0 && (n.districtIds = t);
                    i.length > 0 && (n.wardIds = i);
                    r.length > 0 && (n.streetIds = r);
                    u.length > 0 && (n.projectIds = u)
                }
                return w && w.GetValue() && cm.GetFrontageLevelValues(+w.GetValue(), +s.value) && cm.GetFrontageLevelValues(+w.GetValue(), +s.value).length > 0 && (n.frontage = cm.GetFrontageLevelValues(+w.GetValue(), +s.value)), n.freeText = null, n
            }

            function wf() {
                const n = pf();
                return {
                    eventData: {
                        cateId: n.cates && n.cates.ids,
                        intent: n.intent,
                        cities: n.cityCode,
                        districts: n.districtIds,
                        wards: n.wardIds,
                        street: n.streetIds,
                        projects: n.projectIds,
                        negotiablePrice: n.price.negotiablePrice,
                        minPrice: n.price.minPrice,
                        maxPrice: n.price.maxPrice,
                        minArea: n.area.minArea,
                        maxArea: n.area.maxArea,
                        rooms: n.rooms && n.rooms.ids,
                        directions: n.directions && n.directions.ids,
                        medias: n.medias && n.medias.ids,
                        width: n.frontage
                    },
                    metaData: {
                        location: cm.DeterminePageTrackingType(window.location.pathname)
                    }
                }
            }

            function bf() {
                if (window.SegmentClient) return new Promise(function(n) {
                    let t = wf();
                    window.SegmentClient.NewSearch(t).then(() => n())
                })
            }

            function dt() {
                return new Promise(function(n) {
                    ni.GetSearchingHistories().then(function(t) {
                        (function i() {
                            if (t) {
                                let i = t.filter(n => n.searchingInfos.productType == s.value);
                                if (i.length > 0) {
                                    let n = document.querySelector("div.re__continue-search-body");
                                    if (!n) {
                                        let t = document.querySelector("div.re__location-search-select-body");
                                        if (t) {
                                            let i = document.createElement("div");
                                            i.classList.add("re__location-continue-search");
                                            let r = document.createElement("div");
                                            r.classList.add("re__continue-search-header");
                                            let f = document.createTextNode("Tiếp tục tìm kiếm");
                                            r.appendChild(f);
                                            i.appendChild(r);
                                            n = document.createElement("div");
                                            n.classList.add("re__continue-search-body");
                                            let u = document.createElement("div");
                                            u.classList.add("re__continue-search-item");
                                            n.appendChild(u);
                                            i.appendChild(n);
                                            t.insertBefore(i, t.firstChild)
                                        }
                                    }
                                    let t = 0;
                                    n.replaceChildren();
                                    i.reverse().forEach(i => {
                                        new Promise(r => {
                                            var u = i.searchingInfos,
                                                f, c, a, e, o, h, l, v;
                                            u && u.title && u.price && u.area && u.productType == s.value && t < su.MAX_SHOW && (f = document.createElement("div"), f.classList.add("re__continue-search-item"), c = document.createElement("div"), c.classList.add("re__item-title"), a = document.createTextNode(u.title), c.appendChild(a), f.appendChild(c), e = null, (u.price.min || u.price.max || u.price.level && u.price.level > -1) && (e = u.price.label), o = null, (u.area.min || u.area.max || u.area.level && u.area.level > 0) && (o = u.area.label), h = null, e && o ? h = `${e} • ${o}` : e ? h = `${e}` : o && (h = `${o}`), h && (l = document.createElement("div"), l.classList.add("re__item-content"), v = document.createTextNode(h), l.appendChild(v), f.appendChild(l)), u.position = t + 1, f.addEventListener("mousedown", () => {
                                                pr(u)
                                            }), fr() && f.addEventListener("touchstart", () => {
                                                pr(u)
                                            }), n.appendChild(f), t++);
                                            r()
                                        })
                                    })
                                } else {
                                    var n = document.querySelector("div.re__location-search-select-body"),
                                        r = document.querySelector("div.re__location-continue-search");
                                    r && n && n.removeChild(r)
                                }
                            } else setTimeout(i, 100)
                        })();
                        n()
                    })
                })
            }

            function ar(n) {
                f.value = n ? n : null
            }

            function vr(n, t) {
                if (t.level || t.min || t.max)
                    if (t.level) n.SetValue(t.level.toString(10));
                    else {
                        var i = [];
                        t.min && i.push(t.min);
                        t.max && (t.min || i.push(0), i.push(t.max));
                        n.SetValue(JSON.stringify(i))
                    }
                else n.SetValue(null)
            }

            function ei(n, t) {
                t && t.length > 0 ? n.SetValue(t.join(";")) : n.SetValue(null)
            }

            function kf(n) {
                var t = document.querySelector("#CategoryIdsAsString");
                if (t) t.value = n.join(";")
            }

            function yr(n) {
                return /\d/.test(n)
            }

            function pr(n) {
                new Promise(t => {
                    s.value = n.productType;
                    kf(n.category.ids);
                    ar(n.city.code);
                    let i = g.querySelector(".js__listing-search-select-button-current-text");
                    i.textContent = n.city.label ? n.city.label : "";
                    ri();
                    n.locations && n.locations.length > 0 && n.locations.forEach(t => {
                        var i = t.id.split("_");
                        let r = {
                            item: {
                                DistrictId: i.length > 1 ? i[1] : t.id,
                                WardId: i.length > 0 && o.Ward ? i[0] : "0",
                                StreetId: i.length > 0 && o.Street ? i[0] : "0",
                                ProjectId: i.length > 0 && o.Project ? i[0] : "0",
                                Name: t.label,
                                CityCode: n.city.code,
                                CityName: n.city.label,
                                Type: t.locationType,
                                LocationLevel: o.Street
                            }
                        };
                        rr(null, r)
                    });
                    ei(y, null);
                    ei(b, null);
                    ei(p, null);
                    bt.value = null;
                    vr(v, n.price);
                    vr(l, n.area);
                    br(nt.RECENT, n.position);
                    e();
                    t()
                })
            }

            function df(n, t) {
                ar(n);
                i.querySelector(".re__icon-chevron-down--sm").classList.remove("re__rotate");
                let u = g.querySelector(".js__listing-search-select-button-current-text");
                u.textContent = t;
                let e = i.querySelectorAll(".js__city-search-select-dropdown .js__option");
                i.classList.add("re__search-has-location-input");
                i.querySelector(`.${r.CITY_ICON_SEARCH}`).classList.remove(r.ICON_SEARCH);
                i.querySelector(`.${r.CITY_ICON_SEARCH}`).classList.add(r.ICON_LOCATION);
                e.forEach(n => {
                    n.getAttribute("value") === f.value ? n.classList.add("selected-item") : n.classList.remove("selected-item")
                })
            }

            function gf() {
                f.value || ni.AutoFillCityHistory(df)
            }

            function ne(n) {
                return new Promise(function(t) {
                    let i = fi(wr(n));
                    vt.PushTrackingDataLayer(i, null, wt, hu, null);
                    t()
                })
            }

            function wr(n) {
                return n && n.target && n.target.innerHTML && n.target.innerHTML.includes("Tìm kiếm")
            }

            function br(n, t, i) {
                return new Promise(function(r) {
                    let u = [];
                    u.push({
                        label: "suggestType",
                        data: n
                    });
                    u.push({
                        label: "pos",
                        data: t
                    });
                    i && u.push({
                        label: "kwHint",
                        data: i
                    });
                    vt.SendTrackingDataLayer(nt.EVENT.CLICK_SEARCH_SUGGESTION, u);
                    r()
                })
            }

            function kr(n, t) {
                return new Promise(function(i) {
                    let r = [];
                    t && r.push({
                        label: "tagType",
                        data: t
                    });
                    vt.SendTrackingDataLayer(n, r);
                    i()
                })
            }

            function te(n) {
                return new Promise(function(t) {
                    n.target.tagName.toLowerCase() === "span" && kr(nt.EVENT.REMOVE_ALL_SEARCH_TAG);
                    t()
                })
            }
            var gt = new n.SearchingSuggestionServices,
                dr = new n.YourLocationServices,
                gr = t && t.searchingHistoriesServicesParams ? t.searchingHistoriesServicesParams : {},
                ni = new n.SearchingHistoriesServicesLocationFocus(gr),
                ie = document.querySelector("#Keyword");
            const vt = new n.SearchingTrackingService,
                yt = 5,
                i = document.querySelector("#boxSearchForm"),
                oi = document.querySelector(".js__search-row-location"),
                g = oi.querySelector(".js__city-code-select"),
                f = oi.querySelector("#CityCode"),
                nu = document.querySelector(".re__header-item-no-city"),
                si = document.querySelector(".js__city-search-select-dropdown"),
                hi = document.querySelector(".js__location-search-select-dropdown"),
                tu = document.querySelector(".re__city-search-select-list"),
                ut = document.querySelector(".re__pie-chart");
            i.setAttribute("isnewsearch", !0);
            document.body.setAttribute("isAdjustedContentFlow", !1);
            const ci = document.querySelector(".re__main"),
                li = window.innerWidth < 850,
                ft = navigator.userAgent.includes("Mac");
            let pt = 0;
            var h = document.querySelector("#LocationSearch"),
                c = document.querySelector(".js__location-select"),
                u = document.querySelector(".js__location-tags"),
                s = document.querySelector("#ProductType"),
                tt = document.querySelectorAll("#btnSearch, .js__location-search-button, .js__lfilter-more-search-button"),
                iu = document.querySelectorAll(".js__click-load-page, .js__box-loading a"),
                a = new n.ListingSearchFilterSelectionController(document.querySelector("#CategoryIdsAsString"), {
                    ignoreChangeCurrentText: !0,
                    filterType: "Cate"
                }),
                v = new n.ListingSearchFilterSelectionController(document.querySelector("#PriceAsString")),
                l = new n.ListingSearchFilterSelectionController(document.querySelector("#AreaAsString")),
                w = new n.ListingSearchFilterSelectionController(document.querySelector("#FrontageAsString")),
                ai = document.querySelector("#DistrictIdsAsString"),
                ru = document.querySelector("#StreetIdsAsString"),
                uu = document.querySelector("#WardIdsAsString"),
                fu = document.querySelector("#ProjectIdsAsString"),
                y = new n.ListingSearchFilterSelectionController(document.querySelector("#RoomNumersAsString"), {
                    lastText: "phòng ngủ",
                    tooltipStyleLabel: !0,
                    orderBy: !0,
                    filterType: "NumBedroom"
                });
            const o = {
                Project: 5,
                District: 3,
                Ward: 6,
                Street: 2,
                City: 1
            };
            var b = new n.ListingSearchFilterSelectionController(document.querySelector("#DirectionsAsString"), {
                    filterType: "Direction"
                }),
                vi = i.querySelector("#north"),
                yi = i.querySelector("#northeast"),
                pi = i.querySelector("#east"),
                wi = i.querySelector("#southeast"),
                bi = i.querySelector("#south"),
                ki = i.querySelector("#southwest"),
                di = i.querySelector("#west"),
                gi = i.querySelector("#northwest");
            const k = {
                1: {
                    el: vi,
                    selected: vi.classList.contains("pieSegment-selected") ? !0 : !1
                },
                2: {
                    el: yi,
                    selected: yi.classList.contains("pieSegment-selected") ? !0 : !1
                },
                3: {
                    el: pi,
                    selected: pi.classList.contains("pieSegment-selected") ? !0 : !1
                },
                4: {
                    el: wi,
                    selected: wi.classList.contains("pieSegment-selected") ? !0 : !1
                },
                5: {
                    el: bi,
                    selected: bi.classList.contains("pieSegment-selected") ? !0 : !1
                },
                6: {
                    el: ki,
                    selected: ki.classList.contains("pieSegment-selected") ? !0 : !1
                },
                7: {
                    el: di,
                    selected: di.classList.contains("pieSegment-selected") ? !0 : !1
                },
                8: {
                    el: gi,
                    selected: gi.classList.contains("pieSegment-selected") ? !0 : !1
                }
            };
            var eu = i.querySelector(".re__house-direction-select .js__listing-search-select-reset-button"),
                p = new n.ListingSearchFilterSelectionController(document.querySelector("#MediasAsString"), {
                    removeDuplicateText: "Có ",
                    tooltipStyleLabel: !1,
                    orderBy: !1,
                    filterType: "Other"
                }),
                ou = new n.ListingSearchHistoryHelper,
                d = {
                    SEARCHING_POPULAR: "SEARCHING_POPULAR",
                    SEARCHING_HISTORY: "SEARCHING_HISTORY",
                    SEARCHING_ITEM: "SEARCHING_ITEM",
                    SEARCHING_SELECTED: "SEARCHING_SELECTED"
                };
            const r = {
                SHOW_NO_CITY_SELECT_DROPDOWN: "re__show-no-city-select-dropdown",
                SHOW_CITY_SELECT_DROPDOWN: "re__show-city-select-dropdown",
                SHOW_LOCATION_SELECT_DROPDOWN: "re__show-location-select-dropdown",
                DROPDOWN_SHOW: "re__show",
                HIDDEN: "hidden",
                SHOW_FADE_IN: "re__show-fade-in",
                OVERLAY: "re__overlay",
                CITY_ICON_SEARCH: "re__city-icon-search",
                ICON_SEARCH: "re__icon-search",
                ICON_LOCATION: "re__icon-location",
                RIGHT_BANNER: "ban_wide_right",
                LEFT_BANNER: "ban_wide_left",
                CHAT_CONTAINER: "re__live-chat-container",
                FIX: "re__fix",
                NO_SCROLL: "no-scroll",
                NO_SCROLL_MAC: "no-scroll-mac",
                FEED_BACK: 'div[class*="__MinimizedWidgetMiddle__right"]',
                CLOSE_ICON: "re__icon-close-no-circle",
                ICON_LOCATION_SMALL: "re__icon-location--sm",
                DELETE_ALL_BTN: "re__delete-all",
                NO_CITY_CLOSE_BTN: "no-city-button-close",
                GO_TO_TOP: "gototop"
            };
            var nr = !1,
                wt = "",
                bt = document.querySelector("#VerificationsAsString");
            let it = fi(!1),
                ti = 0;
            document.querySelector("#boxSearchForm").setAttribute("isFix", !1);
            const re = t.ENABLE_MULTIPLE_SEARCHING_HISTORIES ? t.ENABLE_MULTIPLE_SEARCHING_HISTORIES : !1,
                nt = {
                    EVENT: {
                        CLICK_SEARCH_SUGGESTION: "click-search-suggestion",
                        REMOVE_SEARCH_TAG: "remove-search-tag",
                        REMOVE_ALL_SEARCH_TAG: "remove-all-search-tag"
                    },
                    POPULAR: "Popular",
                    RECENT: "Recent",
                    HINT: "Hint"
                },
                su = {
                    MAX_SHOW: 2
                },
                hu = document.querySelector({
                    SRP_SORT: "#SortBy"
                }.SRP_SORT);
            (function() {
                (function n() {
                    if (window.$ && window.$.ui && window.$.ui.autocomplete && window.Swiper) {
                        $(h).autocomplete({
                            appendTo: ".js__location-autocomplete",
                            open: ku,
                            source: gu,
                            minLength: 0,
                            select: bu,
                            close: du,
                            focus: lu
                        });
                        $.ui.autocomplete.prototype._renderMenu = nf;
                        $.ui.autocomplete.prototype._renderItem = uf;
                        const n = i.getElementsByClassName("js__listing-search-select-container");
                        for (let t = 0; t < n.length; t++) n[t].classList.add("swiper-slide");
                        new Swiper(".js__search-filter.swiper-container", {
                            slidesPerView: "auto",
                            navigation: {
                                prevEl: '.re__btn[action="go-left"]',
                                nextEl: '.re__btn[action="go-right"]'
                            },
                            allowTouchMove: window.innerWidth < 1545
                        });
                        i.querySelector('[action="go-left"]').classList.remove("display-none")
                    } else setTimeout(n, 100)
                })();
                ii();
                wu();
                h.addEventListener("click", ef);
                h.addEventListener("keydown", of );
                a.AddChangeEvent(kt);
                a.AddClickApplyEvent(e);
                document.querySelector(".js__location-autocomplete") && sf();
                tt.forEach(n => n.addEventListener("click", e));
                iu.forEach(n => {
                    n.addEventListener("click", tr)
                });
                u.addEventListener("click", function() {
                    c.classList.add("re__location-input");
                    $(h).focus();
                    $(h).autocomplete("search", "")
                });
                p.AddChangeEvent(kt);
                p.AddClickApplyEvent(e);
                const t = function() {
                    const n = window.scrollY || document.documentElement.scrollTop,
                        t = this.document.querySelector(".re__search-box-row"),
                        i = this.document.querySelector(".re__search-box-row-filter"),
                        r = this.document.querySelector(".re__listing-search-box"),
                        f = document.querySelector(".re__search-box-row-col"),
                        e = document.querySelector("footer"),
                        u = document.querySelector(".re__srp");
                    if (n > 56) {
                        var o = (document.querySelector(".js__main-container") || {}).offsetWidth != null ? !0 : !1,
                            s = e.offsetHeight + (o ? 81 : 30),
                            h = document.querySelector("body").offsetHeight - ((document.querySelector("#boxSearchForm") || {
                                offsetHeight: 0
                            }).offsetHeight + n);
                        e.getBoundingClientRect().y < 210 && (this.document.querySelector("#boxSearchForm").classList.remove("fix"), this.document.querySelector("#boxSearchForm").setAttribute("isFix", !1), u && u.style.setProperty("padding-top", null, ""));
                        h > s + 200 && e.getBoundingClientRect().y > 210 ? (this.document.querySelector("#boxSearchForm").getAttribute("isFix") === "false" && u && u.style.setProperty("padding-top", `${140}px`, "important"), this.document.querySelector("#boxSearchForm").classList.add("fix"), this.document.querySelector("#boxSearchForm").setAttribute("isFix", !0), n > 150 && n > ti && (t && t.classList.add("pull"), i && i.classList.add("adjustFiterPosition"), r && r.classList.add("pull")), n < ti && (t && t.classList.remove("pull"), i && i.classList.remove("adjustFiterPosition"), r && r.classList.remove("pull"))) : (this.document.querySelector("#boxSearchForm").classList.remove("adjustTopPosition"), f.classList.add("hide-pseudo"))
                    } else this.document.querySelector("#boxSearchForm").classList.remove("adjustTopPosition"), this.document.querySelector("#boxSearchForm").classList.remove("fix"), this.document.querySelector("#boxSearchForm").setAttribute("isFix", !1), u && u.style.setProperty("padding-top", null, ""), i && i.classList.remove("adjustFiterPosition"), t && t.classList.remove("pull"), r && r.classList.remove("pull"), f && f.classList.remove("hide-pseudo");
                    ti = n
                };
                window.addEventListener("scroll", t);
                v.AddChangeEvent(function(n, t) {
                    t.changeFromClickOption && e()
                });
                v.AddClickApplyEvent(e);
                l.AddChangeEvent(function(n, t) {
                    t.changeFromClickOption && e()
                });
                l.AddClickApplyEvent(e);
                w.AddChangeEvent(function(n, t) {
                    t.changeFromClickOption && e()
                });
                w.AddClickApplyEvent(e);
                y.AddChangeEvent(kt);
                y.AddClickApplyEvent(e);
                b.AddChangeEvent(kt);
                b.AddClickApplyEvent(e);
                eu.addEventListener("click", function(n) {
                    if (n && (n.toElement || n.target)) {
                        let i = n && n.toElement ? n.toElement : n.target,
                            t = i.closest(`.js__listing-search-select-select-dropdown`);
                        const r = t.querySelectorAll(".pieSegment-selected");
                        r.forEach(n => {
                            n.classList.remove("pieSegment-selected")
                        });
                        const u = t.querySelectorAll(".re__checked");
                        u.forEach(n => {
                            n.classList.remove("re__checked"), n.classList.remove("text-selected")
                        });
                        for (const n in k) k[n].selected = !1
                    }
                });
                cu();
                dt();
                gf()
            })()
        } : setTimeout(function() {
            t(i)
        }, 100)
    })(n.Product || (n.Product = {}))
})(window.FrontEnd || (window.FrontEnd = {}));