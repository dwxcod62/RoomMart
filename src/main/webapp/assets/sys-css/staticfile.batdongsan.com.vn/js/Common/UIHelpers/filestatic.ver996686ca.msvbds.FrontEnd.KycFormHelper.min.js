window.FrontEnd || (window.FrontEnd = {});
FrontEnd.KycFormHelper = function() {
    function oi(n, i, r) {
        var u;
        u = r !== undefined && r !== null && r !== "" ? {
            returnurl: i,
            redirect: !0,
            kycPhoneNumber: r
        } : {
            returnurl: i,
            redirect: !0
        };
        t.AjaxWrapper({
            url: e + n,
            type: "GET",
            data: u,
            success: function(n) {
                isLoading = !1;
                $("body").append(n);
                $(".js__form-popup").css("position", "absolute");
                $(".js__form-popup").css("top", $(window).height() / 2 - $(`.${t.GetStyleClass("form-popup-content")}`).height() / 2 + window.scrollY);
                $("#dialog-backdrop").show();
                $(".bg-site").addClass("over-auto")
            }
        })
    }

    function pt() {
        $input = n().find(it);
        var t = 0;
        return $input.val() != "" && (t += 1), n().find(at + ".re__actived").length > 0 && (t += 1), t > 0
    }

    function ht() {
        var t = "",
            i = n().find(vt).val(),
            r = n().find(ei).val();
        i != "" && (t += `<li class="full-name"><div><span>${i}</span></div></li>`);
        r != "" && (t += `<li class="phone-number"><div><span>${r}</span></div></li>`);
        $(".js__RCB-info-user-item").html(t)
    }

    function rt() {
        localStorage && localStorage.setItem && i && localStorage.setItem(w, JSON.stringify({
            elementSelector: i.elementSelector,
            triggerType: i.triggerType,
            triggerPage: i.triggerPage,
            triggerPositionTop: i.triggerPositionTop,
            scrollContentTop: i.scrollContentTop,
            triggerViewMore: i.triggerViewMore,
            triggerPositionLazyload: i.triggerPositionLazyload,
            elementId: i.elementId,
            agent: i.agent
        }));
        ki();
        clearTimeout(window.kycLoginFormSetTimeoutId);
        y(pi, wi);
        setTimeout(function() {
            if (i.isIFrame === !0) {
                const n = new URLSearchParams(window.location.search);
                n.has("returnurl") && (setCookie(ai, JSON.stringify({
                    triggerType: vi
                }), 1, "/", `.${window.location.hostname}`), parent.location.href = `${fi}${n.get("returnurl")}`)
            } else location.reload(!0)
        }, 3e3)
    }

    function ct() {
        var t = "";
        return n().find(at + ".re__actived").each(function() {
            t += `${$(this).html()!=""?$(this).html()+";":""}`
        }), $valInput = n().find(it).val(), $valInput != "" && (t += `${$valInput}`), t
    }

    function n() {
        return $(yi)
    }

    function r() {
        return n().find(ei)
    }

    function y(t, i) {
        if (i) {
            var u = Math.floor(i / 60),
                r = i - u * 60,
                f = r >= 10 ? r : `0${r}`;
            n().find(t).html(`0${u}:${f}`);
            i = i - 1;
            window.kycLoginFormSetTimeoutId = setTimeout(function() {
                y(t, i)
            }, 1e3)
        } else n().find(t).html(`00:00`)
    }

    function g(t) {
        n().find(".js__kyc-otp-input-element").addClass("re__kyc-otp-input-element-error-message");
        n().find(et).addClass("re__kyc-otp-error-message");
        n().find(et).html(t)
    }

    function p() {
        n().find(".js__kyc-otp-input-element").removeClass("re__kyc-otp-input-element-error-message");
        n().find(et).removeClass("re__kyc-otp-error-message");
        n().find(et).html("")
    }

    function wt() {
        for (var i = "", t = 0; t < n().find(s).length; t++) {
            let r = n().find(s)[t];
            $(r).val() && (i += $(r).val())
        }
        return i
    }

    function nt() {
        n().find(s).val("");
        p();
        $(".js__kyc-validate-otp-button-in-body").attr("disabled", !0)
    }

    function lt() {
        if (n().find(s)[0].focus(function() {
                n().find(s)[0].data("event") != !0 && (n().find(s)[0].attr("data-event", !0), $("body#search .kyc-login-form--full-screen--v1").length > 0 && $("body#search .kyc-login-form--full-screen--v1").scrollTop(215))
            }), n().find(s)[0].click(function() {
                n().find(s)[0].data("event-click") != !0 && (n().find(s)[0].attr("data-event-click", !0), $("body#search .kyc-login-form--full-screen--v1").length > 0 && $("body#search .kyc-login-form--full-screen--v1").scrollTop(215))
            }), document.querySelector("#otp-input")) {
            (function t(n) {
                $("#otp-input").is(":focus") || n > 0 && (document.querySelector("#otp-input").focus(), setTimeout(() => {
                    t(n - 1)
                }, 500))
            })(25);
            const n = document.querySelectorAll(".js__kyc-login-form .js__kyc-validate-otp-button-in-body");
            (function i() {
                var t = n.forEach(n => n.getAttribute("data-click"));
                t && t == "true" || (document.querySelectorAll(".js__kyc-otp-input-element").forEach(t => {
                    var r = t.value,
                        i;
                    if (r.length == 6 && +r > -1) {
                        for (i = 0; i < r.length; i++) document.querySelector(s + `:nth-child(${i+1})`).value = r.charAt(i);
                        n.forEach(n => n.removeAttribute("disabled"));
                        n.forEach(n => n.setAttribute("data-click", !0));
                        n.forEach(n => n.dispatchEvent(new Event("click")));
                        n.forEach(n => n.setAttribute("disabled", !0))
                    }
                }), h = setTimeout(i, 600))
            })();
            const t = navigator.userAgent.toLowerCase(),
                i = /android/.test(t);
            i && ($(".js__kyc-otp-input-element").focusin(function() {
                var n = $(this).attr("id");
                bi($("#" + n).offset().left)
            }), $(document).click(function(n) {
                var t = $(n.target),
                    i, r;
                if (t.hasClass("js__tooltip-fill-otp")) {
                    if (t.hasClass("active") && (t.removeClass("active"), i = t.attr("data-otp-code"), i.length == 6 && +i > -1)) {
                        for (r = 0; r < i.length; r++) document.querySelector(s + `:nth-child(${r+1})`).value = i.charAt(r);
                        const n = document.querySelectorAll(".js__kyc-login-form .js__kyc-validate-otp-button-in-body");
                        n.forEach(n => n.removeAttribute("disabled"));
                        n.forEach(n => n.setAttribute("data-click", !0));
                        n.forEach(n => n.dispatchEvent(new Event("click")));
                        n.forEach(n => n.setAttribute("disabled", !0));
                        otpCode = ""
                    }
                } else t.hasClass("js__kyc-otp-input-element") || $(".js__tooltip-fill-otp").removeClass("active")
            }))
        }
    }

    function bi(n) {
        si(60, n)
    }
    async function si(n, t) {
        var i = "";
        try {
            i = await navigator.clipboard.readText()
        } catch (r) {}
        if ($(".js__tooltip-fill-otp").removeClass("pleft"), $(".js__tooltip-fill-otp").removeClass("pright"), t && t < 82.5 ? ($(".js__tooltip-fill-otp").css("left", "12px"), $(".js__tooltip-fill-otp").addClass("pleft")) : t && t > 244.5 ? ($(".js__tooltip-fill-otp").css("left", t - 72 + "px"), $(".js__tooltip-fill-otp").addClass("pright")) : $(".js__tooltip-fill-otp").css("left", t - 47 + "px"), i && i.length > 0 && parseInt(i) >= 0) {
            ut = i;
            $(".js__tooltip-fill-otp").addClass("active");
            $(".js__tooltip-fill-otp").attr("data-otp-code", ut);
            ut && ut.length > 0 && (c = setTimeout(function() {
                $(".js__tooltip-fill-otp").removeAttr("data-otp-code");
                $(".js__tooltip-fill-otp").removeClass("active");
                $(".js__tooltip-fill-otp").removeClass("pleft");
                $(".js__tooltip-fill-otp").removeClass("pright")
            }, 24e4));
            return
        }
        n > 0 && setTimeout(() => {
            si(n - 1)
        }, 2e3)
    }

    function hi() {
        $(".js__kyc-popup-header-title").html("");
        n().addClass("re__from-RCB-mode");
        n().removeClass("re__kyc-phone-mode");
        n().removeClass("re__RCB-login-no-phone");
        n().removeClass("re__kyc-otp-mode");
        n().removeClass("re__kyc-user-type-mode");
        n().removeClass("re__form-RCB-success-mode");
        n().removeClass("re__kyc-success-mode");
        n().removeClass("re__kyc-fail-mode")
    }

    function v() {
        $(".js__kyc-popup-header-title").html("");
        n().removeClass("re__from-RCB-mode");
        n().addClass("re__kyc-phone-mode");
        n().removeClass("re__RCB-login-no-phone");
        n().removeClass("re__kyc-otp-mode");
        n().removeClass("re__kyc-user-type-mode");
        n().removeClass("re__form-RCB-success-mode");
        n().removeClass("re__kyc-success-mode");
        n().removeClass("re__kyc-fail-mode");
        r().focus()
    }

    function bt(t) {
        t ? $(".js__kyc-popup-header-title").html("Nhập mã xác thực") : $(".js__kyc-popup-header-title").html("Nhập OTP");
        n().removeClass("re__from-RCB-mode");
        n().removeClass("re__kyc-phone-mode");
        n().removeClass("re__RCB-login-no-phone");
        n().addClass("re__kyc-otp-mode");
        n().removeClass("re__kyc-user-type-mode");
        n().removeClass("re__form-RCB-success-mode");
        n().removeClass("re__kyc-success-mode");
        n().removeClass("re__kyc-fail-mode");
        lt()
    }

    function kt() {
        $(".js__kyc-popup-header-title").html("Chọn tài khoản để tiếp tục");
        n().removeClass("re__from-RCB-mode");
        n().removeClass("re__kyc-phone-mode");
        n().removeClass("re__RCB-login-no-phone");
        n().removeClass("re__kyc-otp-mode");
        n().addClass("re__kyc-user-type-mode");
        n().removeClass("re__form-RCB-success-mode");
        n().removeClass("re__kyc-success-mode");
        n().removeClass("re__kyc-fail-mode")
    }

    function dt() {
        if ($("body").addClass("loading-body"), i.formType == 1) t.AjaxWrapperWithPromise({
            type: "POST",
            url: e + st,
            data: {
                type: "productcontact",
                emailSeller: i.emailSeller,
                mobileSender: $("#kycPhoneInput").val().trim(),
                nameSender: $("#kycFullNameInput").val().trim(),
                nameSeller: i.nameSeller,
                mobileSeller: i.mobileSeller,
                userid: i.userId,
                loginid: loginId,
                content: ct(),
                productid: i.productId,
                platform: i.platform,
                device: i.device,
                referrer: document.referrer,
                producturl: window.location.href,
                token: "",
                formType: i.formType,
                productType: i.productType
            }
        }).then(e => {
            $("body").removeClass("loading-body"), e.success ? (i.formType == 1 && (n().removeClass("re__from-RCB-mode"), n().removeClass("re__kyc-phone-mode"), n().removeClass("re__RCB-login-no-phone"), n().removeClass("re__kyc-otp-mode"), n().removeClass("re__kyc-user-type-mode"), n().addClass("re__form-RCB-success-mode"), n().removeClass("re__kyc-success-mode"), n().removeClass("re__kyc-fail-mode"), tt("RCB-success", "RCB"), $(".modal-content .close").click(function() {
                document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click")));
                $("body").addClass("loading-body");
                location.reload(!0)
            })), ci()) : (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading(), tt("RCB-fail", "RCB"))
        });
        else {
            var o = $("#kycPhoneInput").val();
            o && o != "" ? grecaptcha && grecaptcha.execute(i.reCAPTCHASiteKey, {
                action: "submit"
            }).then(function(o) {
                t.AjaxWrapperWithPromise({
                    type: "POST",
                    url: e + st,
                    data: {
                        type: "productcontact",
                        emailSeller: i.emailSeller,
                        mobileSender: $("#kycPhoneInput").val().trim(),
                        nameSender: $("#kycFullNameInput").val().trim(),
                        nameSeller: i.nameSeller,
                        mobileSeller: i.mobileSeller,
                        userid: i.userId,
                        loginid: loginId,
                        content: ct(),
                        productid: i.productId,
                        platform: i.platform,
                        device: i.device,
                        referrer: document.referrer,
                        producturl: window.location.href,
                        token: o,
                        formType: i.formType,
                        productType: i.productType
                    }
                }).then(function(e) {
                    $("body").removeClass("loading-body");
                    e.success ? (i.formType == 2 && (n().removeClass("re__from-RCB-mode"), n().removeClass("re__kyc-phone-mode"), n().removeClass("re__RCB-login-no-phone"), n().removeClass("re__kyc-otp-mode"), n().removeClass("re__kyc-user-type-mode"), n().addClass("re__form-RCB-success-mode"), n().removeClass("re__kyc-success-mode"), n().removeClass("re__kyc-fail-mode"), tt("RCB-success", "RCB")), ci()) : (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading(), tt("RCB-fail", "RCB"))
                })
            }) : ($("body").removeClass("loading-body"), v(), i.formType == 2 ? $(".js__kyc-login-form").addClass("re__RCB-login-no-phone") : $(".js__kyc-login-form").removeClass("re__RCB-login-no-phone"))
        }
    }

    function ki() {
        var t;
        $(".js__kyc-popup-header-title").html("");
        n().removeClass("re__from-RCB-mode");
        n().removeClass("re__kyc-phone-mode");
        n().removeClass("re__RCB-login-no-phone");
        n().removeClass("re__kyc-otp-mode");
        n().removeClass("re__kyc-user-type-mode");
        n().removeClass("re__form-RCB-success-mode");
        n().addClass("re__kyc-success-mode");
        n().removeClass("re__kyc-fail-mode");
        var r = document.querySelector(".js__kyc-success-event").getAttribute("data-type"),
            u = document.querySelector(".js__kyc-success-event").getAttribute("data-event"),
            i = document.querySelector(".js__kyc-fail-event").getAttribute("data-form-type");
        window.dataLayer = window.dataLayer || [];
        t = {
            event: u,
            type: r
        };
        i && (t.form = i);
        window.dataLayer.push(t)
    }

    function u(t) {
        $(".js__kyc-popup-header-title").html("");
        n().removeClass("re__from-RCB-mode");
        n().removeClass("re__kyc-phone-mode");
        n().removeClass("re__RCB-login-no-phone");
        n().removeClass("re__kyc-otp-mode");
        n().removeClass("re__kyc-user-type-mode");
        n().removeClass("re__from-RCB-success-mode");
        n().removeClass("re__kyc-success-mode");
        n().addClass("re__kyc-fail-mode");
        gt(t)
    }

    function gt(n) {
        var r = document.querySelector(".js__kyc-fail-event").getAttribute("data-event"),
            u = document.querySelector(".js__kyc-fail-event").getAttribute("data-type"),
            i = document.querySelector(".js__kyc-fail-event").getAttribute("data-form-type"),
            t;
        window.dataLayer = window.dataLayer || [];
        t = {
            event: r,
            type: u
        };
        i && (t.form = i);
        n && (t.msgOrCode = n);
        window.dataLayer.push(t)
    }

    function ci() {
        try {
            let t = new URL(document.location).searchParams,
                r = t.get("source"),
                u = t.get("adid"),
                f = $(".tracking-sponsored");
            if (u && r && r === "ad" && f.length === 0) {
                var n = new Image(1, 1);
                n.src = `${i.adbutlerAPI}convtrack.spark?MID=${i.adbutlerConfig.MID}&plid=${u}`;
                n.className = "tracking-sponsored";
                document.body.append(n)
            }
        } catch (t) {
            console.log("Error tracking convension!", t)
        }
    }

    function tt(n, t) {
        if (i.formType == 1) {
            window.dataLayer = window.dataLayer || [];
            var r = {
                event: n,
                type: t
            };
            window.dataLayer.push(r)
        }
        window.SegmentClient && i.productId && window.SegmentClient.LeadRequestCallBack(i.productId)
    }

    function ni() {
        $(".js__locked-account-error").attr("style", "display: block")
    }

    function f() {
        $(".js__locked-account-error").removeAttr("style")
    }

    function li(e) {
        di(e).then(n => {
            n.isSuccess && (i && i.formType == 1 ? (ht(), dt()) : rt())
        }, () => {
            n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u("SELECT_USER_TYPE_ERROR"), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
        })
    }

    function di(n) {
        const t = $(".js__kyc-form-helper").data("select-user-type-path");
        return new Promise((i, r) => {
            fetch(`${e}${t}`, {
                method: "POST",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    AccessToken: n,
                    isRemember: 1
                })
            }).then(n => n.json()).then(i).catch(r)
        })
    }

    function ti(n) {
        return n = n ? n : [], n.push({
            text: "",
            "class": "hidden js__kyc-form-open-phone-mode-in-footer",
            eventHandle: function() {
                v()
            }
        }), n.push({
            text: "",
            "class": "hidden js__kyc-form-select-personal-account-in-footer",
            eventHandle: function() {
                var n = $(".js__kyc-personal-account").data("token");
                li(n)
            }
        }), n.push({
            text: "",
            "class": "hidden js__kyc-form-select-employee-account-in-footer",
            eventHandle: function() {
                var n = $(".js__kyc-employee-account").data("token");
                li(n)
            }
        }), n
    }

    function ii(n, i, r) {
        var u = {
            type: "GET",
            dataType: "json",
            contentType: "application/json",
            url: `${e}${n}?phoneNumber=${i}`,
            xhrFields: {
                withCredentials: !0
            },
            crossDomain: !0,
            "async": !1,
            success: function(n) {
                n.isSuccess ? n.data === !0 && r(!0) : r(!1)
            },
            error: function() {
                r(!1)
            }
        };
        t.AjaxWrapper(u)
    }

    function ft() {
        localStorage && localStorage.getItem && localStorage.getItem(w) && localStorage.removeItem(w)
    }

    function ri() {
        const n = new URLSearchParams(window.location.search);
        n.has("returnurl") && (parent.location.href = `${fi}${n.get("returnurl")}`)
    }

    function ui(n, t, r) {
        var f, u, e;
        if ($(".js__kyc-login-form .close").click(), window.dataLayer = window.dataLayer || [], window.dataLayer.push({
                event: "kyc.viewloginForm"
            }), f = $(location).attr("pathname"), f += window.location.search, localStorage && localStorage.setItem && i) {
            let n = "loginForm";
            t === !0 ? (u = i, u.mobileSender = $("#kycPhoneInput").val().trim(), u.nameSender = $("#kycFullNameInput").val().trim(), u.content = ct(), u.loginId = loginId, localStorage.setItem(w, JSON.stringify({
                elementSelector: i.elementSelector,
                triggerType: "rcbSuccess",
                triggerPage: i.triggerPage,
                triggerPositionTop: i.triggerPositionTop,
                scrollContentTop: i.scrollContentTop,
                triggerViewMore: i.triggerViewMore,
                triggerPositionLazyload: i.triggerPositionLazyload,
                elementId: i.elementId,
                agent: i.agent,
                product: u,
                source: n
            }))) : localStorage.setItem(w, JSON.stringify({
                elementSelector: i.elementSelector,
                triggerType: i.triggerType,
                triggerPage: i.triggerPage,
                triggerPositionTop: i.triggerPositionTop,
                scrollContentTop: i.scrollContentTop,
                triggerViewMore: i.triggerViewMore,
                triggerPositionLazyload: i.triggerPositionLazyload,
                elementId: i.elementId,
                agent: i.agent,
                source: n
            }))
        }
        e = !1;
        $("#product-detail-wap").length > 0 && (e = !0);
        e === !0 ? location.href = `${location.origin}/sellernet/trang-dang-nhap?&redirect=true&returnurl=${encodeURIComponent(f)}&kycPhoneNumber=${r}` : oi(n, encodeURIComponent(f), r)
    }
    var i, st, h, c, ut;
    const t = new CommonJS.Common,
        w = "KYC_TRIGGER_TYPE_LOCAL_STORAGE_KEY_CACHE",
        ai = "KYC_TRIGGER_TYPE_KEY_CACHE",
        vi = "ShowPhone",
        e = $("#staticDomain").data("msvrouter") !== undefined ? $("#staticDomain").data("msvrouter") : "",
        fi = $("#staticDomain").data("proaccount-domain") !== undefined ? $("#staticDomain").data("proaccount-domain") : "",
        yi = ".js__kyc-login-form",
        at = ".js__tag-option",
        it = "#txtSenderContent",
        vt = "#kycFullNameInput",
        ei = "#kycPhoneInput",
        yt = ".js__kyc-header-submessage-phone",
        b = ".js__kyc-otp-count-down-time",
        pi = ".js__kyc-header-note-count-down",
        s = ".js__kyc-otp-input-element",
        et = ".js__kyc-otp-error-message",
        k = ".js__kyc-personal-account",
        d = ".js__kyc-employee-account",
        ot = ".js__back-to-kyc-phone-mode-in-body",
        o = 60,
        wi = 2;
    let l = 1,
        a = !1;
    this.OpenForm = function(s) {
        const ut = $(".js__kyc-form-helper").data("form-path"),
            w = $(".js__kyc-form-helper").data("send-otp-path"),
            et = $(".js__kyc-form-helper").data("validate-otp-path"),
            ot = $(".js__kyc-form-helper").data("login-form-path"),
            fi = $(".js__kyc-form-helper").data("pwd-flow"),
            ei = $(".js__kyc-form-helper").data("is-password-change-path");
        st = $(".js__kyc-form-helper").data("form-rcb");
        loginId = 0;
        i = s;
        s.formType == 1 ? hi() : v();
        let oi = {
            classModalDialog: s.classModalDialog,
            classContent: `new2021 form-col-1 re__rcb-kyc js__kyc-login-form ${s.classModalRCB?s.classModalRCB:"re__kyc-phone-mode"}`,
            classHeader: `modal-header re__kyc-popup-header`,
            classFooter: `modal-footer re__kyc-popup-footer`,
            disableNomodal: !0,
            title: "",
            width: 464,
            url: `${e}${ut}?name=${encodeURIComponent(s.name)}&avatar=${encodeURIComponent(s.avatar)}&messageType=${s.messageType}&formType=${s.formType}&productType=${s.productType}`,
            type: "GET",
            keepBodyScroll: !1,
            buttons: ti([{
                text: "Gửi RCB",
                "class": "re__kyc-send-RCB-button-in-footer js__kyc-send-RCB-button-in-footer",
                eventHandle: function() {
                    if (n().find(it).val().indexOf("<") >= 0 || n().find(it).val().indexOf(">") >= 0) {
                        t.AddErrorMessage($inputName, "Nội dung có ký tự đặc biệt <, >");
                        t.RemoveEventLoading();
                        return
                    }
                    if (t.RemoveEventLoading(), pt()) s.formType == 1 ? v() : s.formType == 2 && (ht(), dt());
                    else {
                        t.AddErrorMessage($input, "Bạn phải chọn ít nhất 1 mục hoặc nhập nội dung yêu cầu");
                        t.RemoveEventLoading();
                        return
                    }
                }
            }, {
                text: "Send OTP",
                "class": "re__kyc-send-otp-button-in-footer js__kyc-send-otp-button-in-footer",
                eventHandle: function() {
                    if (t.AddEventLoading($(`.js__submit-loading`)), $input = r(), $inputName = n().find(vt), $inputName.val().indexOf("<") >= 0 || $inputName.val().indexOf(">") >= 0) {
                        t.AddErrorMessage($inputName, "Họ và tên có ký tự đặc biệt <, >");
                        t.RemoveEventLoading();
                        return
                    }
                    if (!$input.val()) {
                        t.AddErrorMessage($input, "Số điện thoại không được để trống.");
                        t.RemoveEventLoading();
                        return
                    }
                    if ($input.val().indexOf("055") == 0 || $input.val().indexOf("095") == 0 || $input.val().indexOf("022") == 0 || $input.val().indexOf("024") == 0 || $input.val().indexOf("031") == 0 || $input.val().indexOf("052") == 0 || $input.val().indexOf("030") == 0) {
                        t.AddErrorMessage($input, "Số điện thoại không được hỗ trợ OTP");
                        t.RemoveEventLoading();
                        return
                    }
                    let h = t.ValidateMobile($input);
                    if (!h) {
                        t.AddErrorMessage($input, "Số điện thoại không hợp lệ");
                        t.RemoveEventLoading();
                        return
                    }
                    if (i.formType == 2) {
                        grecaptcha && grecaptcha.execute(i.reCAPTCHASiteKey, {
                            action: "submit"
                        }).then(function(o) {
                            t.AjaxWrapperWithPromise({
                                type: "POST",
                                url: e + st,
                                data: {
                                    type: "productcontact",
                                    emailSeller: i.emailSeller,
                                    mobileSender: $("#kycPhoneInput").val().trim(),
                                    nameSender: $("#kycFullNameInput").val().trim(),
                                    nameSeller: i.nameSeller,
                                    mobileSeller: i.mobileSeller,
                                    userid: i.userId,
                                    loginid: loginId,
                                    content: ct(),
                                    productid: i.productId,
                                    platform: i.platform,
                                    device: i.device,
                                    referrer: document.referrer,
                                    producturl: window.location.href,
                                    token: o,
                                    formType: 3,
                                    productType: i.productType
                                }
                            }).then(function(e) {
                                $("body").removeClass("loading-body");
                                e.success ? i.formType == 2 && (ht(), n().removeClass("re__from-RCB-mode"), n().removeClass("re__kyc-phone-mode"), n().removeClass("re__kyc-otp-mode"), n().removeClass("re__kyc-user-type-mode"), n().addClass("re__form-RCB-success-mode"), n().removeClass("re__kyc-success-mode"), n().removeClass("re__kyc-fail-mode"), tt("RCB-success", "RCB"), $(".js__submit-loading").removeClass("active")) : (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading(), tt("RCB-fail", "RCB"))
                            })
                        });
                        return
                    }
                    if (!!$(".js__agree-login-kyc").length && !$(".js__agree-login-kyc").hasClass("checked")) {
                        t.RemoveEventLoading();
                        return
                    }
                    if ($(".kyc-login-form--full-screen--v1").length > 0 && !$(".js__agree-login-kyc").hasClass("checked")) {
                        t.RemoveEventLoading();
                        return
                    }
                    if (fi === "True") {
                        var s = !1;
                        if (ii(ei, $input.val(), function(n) {
                                n === !0 && (s = !0)
                            }), s) return ui(ot, !0, $input.val())
                    }
                    return fetch(`${w}?phoneNumber=${$input.val()}`, {
                        method: "GET",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        }
                    }).then(n => n.json()).then(i => {
                        l = 1, i.isSuccess ? (i.data && i.data.isNewUser ? (n().find(".js__kyc-header-message").html("Đăng ký tài khoản thành công"), n().find(".js__kyc-header-submessage").html("Cảm ơn bạn đã sử dụng dịch vụ của Batdongsan.com.vn")) : (n().find(".js__kyc-header-message").html("Đăng nhập thành công"), n().find(".js__kyc-header-submessage").attr("style", "display: none")), t.RemoveEventLoading(), n().find(yt).html($input.val()), bt(), clearTimeout(window.kycLoginFormSetTimeoutId), y(b, o), setTimeout(function() {
                            $(".js__kyc-otp-count-down").addClass("re__resend-kyc-otp")
                        }, o * 1e3 + 1e3), f(), t.RemoveErrorMessage($input)) : i.statusCode == "REACH_MAX_OTP_REQUEST" ? (n().find(".js__kyc-header-message").html("Yêu cầu mã OTP<br>vượt số lần quy định"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Bạn đã yêu cầu cung cấp mã xác thực quá nhiều lần trong ngày, vượt quy định cho phép của Batdongsan.com.vn. Mọi thắc mắc vui lòng liên hệ tổng đài <span>1900 1881<\/span> để được hỗ trợ"), u(i.statusCode), r().val(""), t.RemoveErrorMessage(r()), t.RemoveEventLoading()) : i.statusCode == "INVALID_FORMAT_PHONE_NUMBER" ? (t.AddErrorMessage($input, "Số điện thoại không hợp lệ"), t.RemoveEventLoading()) : i.statusCode == "USER_IS_BLOCKED" || i.statusCode == "LOCKED_LOGIN" ? (ni(), gt(i.statusCode), t.RemoveEventLoading()) : i.statusCode == "PHONE_IS_IN_USED_AS_SECONDARY_NUMBER" ? (t.AddErrorMessage($input, "Hệ thống không hỗ trợ đăng nhập với số điện thoại phụ.<br/>Vui lòng sử dụng số điện thoại chính."), t.RemoveEventLoading()) : (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u("UNKNOW_ERROR_WHEN_SEND_OTP"), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()), t.RemoveEventLoading()
                    }, () => {
                        n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u("SEND_OTP_ERROR"), r().val(""), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                    })
                }
            }, {
                text: "Validate OTP",
                "class": "re__kyc-validate-otp-button-in-footer js__kyc-validate-otp-button-in-footer",
                eventHandle: function() {
                    p();
                    document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                        n.setAttribute("disabled", !0)
                    });
                    t.AddEventLoading($(`.js__submit-loading`));
                    var i = wt();
                    if (!i || i.length < 6) {
                        g("Mã xác thực chưa hoàn thành.");
                        document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                            n.removeAttribute("disabled")
                        });
                        t.RemoveEventLoading();
                        return
                    }
                    fetch(`${e}${et}`, {
                        method: "POST",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            phoneNumber: r().val(),
                            otpValue: i,
                            fullName: n().find(vt).val()
                        })
                    }).then(n => n.json()).then(i => {
                        var r, u;
                        if (t.RemoveEventLoading(), document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                                n.removeAttribute("disabled")
                            }), !i.isSuccess) {
                            g("Mã xác thực không hợp lệ");
                            gt(i.statusCode);
                            return
                        }
                        if (i.statusCode == "ChoosentAccount") {
                            r = i.data.userTokens.filter(n => n.userType != 4)[0].token;
                            n().find(k).data("token", r);
                            n().find(k).attr("data-token", r);
                            u = i.data.userTokens.filter(n => n.userType == 4)[0].token;
                            n().find(d).data("token", u);
                            n().find(d).attr("data-token", u);
                            kt();
                            return
                        }
                        s.formType == 1 ? (ht(), dt()) : rt()
                    }, () => {
                        document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                            n.removeAttribute("disabled")
                        }), n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u("VALIDATE_OTP_ERROR"), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                    })
                }
            }, {
                text: "Close popup",
                "class": "re__kyc-close-popup-button-in-footer js__kyc-close-popup-button-in-footer",
                eventHandle: function() {
                    ft();
                    document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click")));
                    s.isIFrame === !0 ? ($("#dialogPopup").append('<div id="fancybox-loading"><div><\/div><\/div>'), ri()) : $(".modal-content .close").click()
                }
            }, {
                text: "Back to Send OTP",
                "class": "hidden js__back-to-kyc-phone-mode-in-footer",
                eventHandle: function() {
                    v();
                    nt();
                    p();
                    ft()
                }
            }, ])
        };
        t.ShowDialog(oi),
            function si() {
                $tag = n().find(at);
                $tag.length > 0 && ($("#FormType").val() == 1 || $("#FormType").val() == 2) ? ($tag.click(function() {
                    $(this).hasClass("re__actived") ? $(this).removeClass("re__actived") : $(this).addClass("re__actived");
                    pt() > 0 ? ($(".js__submit-feedback-button-in-body").removeAttr("disabled"), $(".js__submit-feedback-login-button-in-body").removeAttr("disabled"), $("#validateFortxtSenderContent").remove()) : ($(".js__submit-feedback-button-in-body").attr("disabled", !0), $(".js__submit-feedback-login-button-in-body").attr("disabled", !0))
                }), n().find(it).keyup(function() {
                    var n = $(this).val();
                    n.indexOf("<") >= 0 && (n = n.replace("<", ""), $(this).val(n));
                    n.indexOf(">") >= 0 && (n = n.replace(">", ""), $(this).val(n));
                    pt() > 0 ? ($(".js__submit-feedback-button-in-body").removeAttr("disabled"), $(".js__submit-feedback-login-button-in-body").removeAttr("disabled"), $("#validateFortxtSenderContent").remove()) : ($(".js__submit-feedback-button-in-body").attr("disabled", !0), $(".js__submit-feedback-login-button-in-body").attr("disabled", !0))
                }), window.dataCache = undefined, window.userServices.getCurrentUserInfo(function(n) {
                    n && (loginId = n.userid, i.formType == 2 && (n.mobile && n.mobile != "" ? ($("#kycFullNameInput").val(n.name), $("#kycPhoneInput").val(n.mobile), $(".js__submit-feedback-login-button-in-body").html("Gửi"), $(".js__submit-feedback-login-button-in-body").attr("tracking-id", "submit-rcb-form-ldp"), $(".js__kyc-send-otp-button-in-body").attr("tracking-id", "kyc-send-otp")) : n.senderMobile && n.senderMobile != "" ? ($("#kycFullNameInput").val(n.senderName), $("#kycPhoneInput").val(n.senderMobile), $(".js__submit-feedback-login-button-in-body").html("Gửi"), $(".js__submit-feedback-login-button-in-body").attr("tracking-id", "submit-rcb-form-ldp"), $(".js__kyc-send-otp-button-in-body").attr("tracking-id", "kyc-send-otp")) : ($(".js__submit-feedback-login-button-in-body").attr("tracking-id", "request-submit-rcb-form-ldp"), $(".js__kyc-send-otp-button-in-body").attr("tracking-id", "submit-rcb-form-ldp"), $(".js__submit-feedback-login-button-in-body").html("Tiếp tục"), $(".js__kyc-send-otp-button-in-body").html("Gửi"))))
                }), document.querySelectorAll(".js__back-to-form-RCB-mode-in-body i").forEach(n => n.addEventListener("click", hi))) : setTimeout(si, 500)
            }(),
            function ci() {
                var i = n().find(".js__resend-kyc-otp");
                i.length == 1 ? i.click(function() {
                    a || (document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click"))), a = !0, fetch(`${w}?phoneNumber=${$input.val()}`, {
                        method: "GET",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        }
                    }).then(n => n.json()).then(n => (a = !1, clearTimeout(window.kycLoginFormSetTimeoutId), y(b, o), setTimeout(function() {
                        $(".js__kyc-otp-count-down").addClass("re__resend-kyc-otp")
                    }, o * 1e3 + 1e3), nt(), lt(), l++, l == 5 && $(".js__kyc-otp-count-down").remove(), $(".js__kyc-otp-count-down").removeClass("re__resend-kyc-otp"), n)).then(i => {
                        i.isSuccess || (i.statusCode == "REACH_MAX_OTP_REQUEST" ? (n().find(".js__kyc-header-message").html("Yêu cầu mã OTP<br>vượt số lần quy định"), n().find(".js__kyc-header-submessage").html("Bạn đã yêu cầu cung cấp mã xác thực quá nhiều lần trong ngày, vượt quy định cho phép của Batdongsan.com.vn. Mọi thắc mắc vui lòng liên hệ tổng đài <span>1900 1881<\/span> để được hỗ trợ"), u(i.statusCode), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()) : i.statusCode != "INVALID_FORMAT_PHONE_NUMBER" && (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(i.statusCode), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()))
                    }, () => {
                        n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u("RESEND_OTP_ERROR"), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                    }))
                }) : setTimeout(ci, 500)
            }(),
            function li() {
                n().find(".js__form-RCB-success").length == 1 ? i.formType == 1 ? n().find(".js__form-RCB-success-close-popup-button-in-body").click(function() {
                    rt()
                }) : n().find(".js__form-RCB-success-login-close-popup-button-in-body").click(function() {
                    document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click")));
                    $(".js__kyc-login-form .close").click()
                }) : setTimeout(li, 500)
            }()
    };
    this.OpenPricingHistoryKycForm = function() {
        const it = $(".js__kyc-form-helper").data("pricing-history-form-path"),
            s = $(".js__kyc-form-helper").data("send-otp-path"),
            ut = $(".js__kyc-form-helper").data("validate-otp-path"),
            tt = $(".js__kyc-form-helper").data("login-form-path"),
            et = $(".js__kyc-form-helper").data("pwd-flow"),
            ot = $(".js__kyc-form-helper").data("is-password-change-path");
        i = {
            triggerType: "scrollToElement",
            elementSelector: ".js__pricing-history-scroll-to"
        };
        v();
        let st = {
            classModalDialog: "kyc-login-form--full-screen",
            classContent: `new2021 form-col-1 re__pricing-history-kyc js__kyc-login-form re__kyc-phone-mode`,
            classHeader: `modal-header re__kyc-popup-header`,
            classFooter: `modal-footer re__kyc-popup-footer`,
            disableNomodal: !0,
            title: '<p class="re__kyc-popup-header-title js__kyc-popup-header-title"><p>',
            width: 464,
            url: `${e}${it}`,
            type: "GET",
            keepBodyScroll: !1,
            buttons: ti([{
                text: "Send OTP",
                "class": "re__kyc-send-otp-button-in-footer js__kyc-send-otp-button-in-footer",
                eventHandle: function() {
                    if (t.AddEventLoading($(`.js__submit-loading`)), $input = r(), !$input.val()) {
                        t.AddErrorMessage($input, "Số điện thoại không được để trống.");
                        t.RemoveEventLoading();
                        return
                    }
                    let e = t.ValidateMobile($input);
                    if (!e) {
                        t.AddErrorMessage($input, "Số điện thoại không hợp lệ");
                        t.RemoveEventLoading();
                        return
                    }
                    if (!!$(".js__agree-login-kyc").length && !$(".js__agree-login-kyc").hasClass("checked")) {
                        t.RemoveEventLoading();
                        return
                    }
                    if ($(".kyc-login-form--full-screen--v1").length > 0 && !$(".js__agree-login-kyc").hasClass("checked")) {
                        t.RemoveEventLoading();
                        return
                    }
                    if (et === "True") {
                        var i = !1;
                        if (ii(ot, $input.val(), function(n) {
                                n === !0 && (i = !0)
                            }), i) return ui(tt, !1, $input.val())
                    }
                    return fetch(`${s}?phoneNumber=${$input.val()}`, {
                        method: "GET",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        }
                    }).then(n => n.json()).then(i => {
                        l = 1, i.isSuccess ? (i.data && i.data.isNewUser ? (n().find(".js__kyc-header-message").html("Đăng ký tài khoản thành công"), n().find(".js__kyc-header-submessage").html("Cảm ơn bạn đã sử dụng dịch vụ của Batdongsan.com.vn")) : (n().find(".js__kyc-header-message").html("Đăng nhập thành công"), n().find(".js__kyc-header-submessage").attr("style", "display: none")), t.RemoveEventLoading(), n().find(yt).html($input.val()), bt(), clearTimeout(window.kycLoginFormSetTimeoutId), y(b, o), setTimeout(function() {
                            $(".js__kyc-otp-count-down").addClass("re__resend-kyc-otp")
                        }, o * 1e3 + 1e3), f(), t.RemoveErrorMessage($input)) : i.statusCode == "REACH_MAX_OTP_REQUEST" ? (n().find(".js__kyc-header-message").html("Yêu cầu mã OTP<br>vượt số lần quy định"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Bạn đã yêu cầu cung cấp mã xác thực quá nhiều lần trong ngày, vượt quy định cho phép của Batdongsan.com.vn. Mọi thắc mắc vui lòng liên hệ tổng đài <span>1900 1881<\/span> để được hỗ trợ"), u(), r().val(""), t.RemoveErrorMessage(r()), t.RemoveEventLoading()) : i.statusCode == "INVALID_FORMAT_PHONE_NUMBER" ? (t.AddErrorMessage($input, "Số điện thoại không hợp lệ"), t.RemoveEventLoading()) : i.statusCode == "USER_IS_BLOCKED" || i.statusCode == "LOCKED_LOGIN" ? (ni(), t.RemoveEventLoading()) : i.statusCode == "PHONE_IS_IN_USED_AS_SECONDARY_NUMBER" ? (t.AddErrorMessage($input, "Hệ thống không hỗ trợ đăng nhập với số điện thoại phụ.<br/>Vui lòng sử dụng số điện thoại chính."), t.RemoveEventLoading()) : (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()), t.RemoveEventLoading()
                    }, () => {
                        n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                    })
                }
            }, {
                text: "Validate OTP",
                "class": "re__kyc-validate-otp-button-in-footer js__kyc-validate-otp-button-in-footer",
                eventHandle: function() {
                    p();
                    document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                        n.setAttribute("disabled", !0)
                    });
                    t.AddEventLoading($(`.js__submit-loading`));
                    var i = wt();
                    if (!i || i.length < 6) {
                        g("Mã xác thực chưa hoàn thành.");
                        document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                            n.removeAttribute("disabled")
                        });
                        t.RemoveEventLoading();
                        return
                    }
                    fetch(`${e}${ut}`, {
                        method: "POST",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            phoneNumber: r().val(),
                            otpValue: i
                        })
                    }).then(n => n.json()).then(i => {
                        var r, u;
                        if (document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                                n.removeAttribute("disabled")
                            }), t.RemoveEventLoading(), !i.isSuccess) {
                            g("Mã xác thực không hợp lệ");
                            return
                        }
                        if (i.statusCode == "ChoosentAccount") {
                            r = i.data.userTokens.filter(n => n.userType != 4)[0].token;
                            n().find(k).data("token", r);
                            n().find(k).attr("data-token", r);
                            u = i.data.userTokens.filter(n => n.userType == 4)[0].token;
                            n().find(d).data("token", u);
                            n().find(d).attr("data-token", u);
                            kt();
                            return
                        }
                        rt()
                    }, () => {
                        document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                            n.removeAttribute("disabled")
                        }), n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                    })
                }
            }, {
                text: "Close popup",
                "class": "re__kyc-close-popup-button-in-footer js__kyc-close-popup-button-in-footer",
                eventHandle: function() {
                    document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click")));
                    params.isIFrame === !0 ? ($("#dialogPopup").append('<div id="fancybox-loading"><div><\/div><\/div>'), ri()) : $(".modal-content .close").click()
                }
            }, {
                text: "Back to Send OTP",
                "class": "hidden js__back-to-kyc-phone-mode-in-footer",
                eventHandle: function() {
                    v();
                    nt();
                    p();
                    ft()
                }
            }, {
                text: "Open login Form",
                "class": "hidden js__back-to-kyc-phone-mode-in-footer",
                eventHandle: function() {}
            }])
        };
        t.ShowDialog(st),
            function ht() {
                var i = n().find(".js__resend-kyc-otp");
                i.length == 1 ? i.click(function() {
                    a || (document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click"))), a = !0, fetch(`${s}?phoneNumber=${$input.val()}`, {
                        method: "GET",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        }
                    }).then(n => n.json()).then(n => (a = !1, clearTimeout(window.kycLoginFormSetTimeoutId), y(b, o), setTimeout(function() {
                        $(".js__kyc-otp-count-down").addClass("re__resend-kyc-otp")
                    }, o * 1e3 + 1e3), nt(), lt(), l++, l == 5 && $(".js__kyc-otp-count-down").remove(), $(".js__kyc-otp-count-down").removeClass("re__resend-kyc-otp"), n)).then(i => {
                        i.isSuccess || (i.statusCode == "REACH_MAX_OTP_REQUEST" ? (n().find(".js__kyc-header-message").html("Yêu cầu mã OTP<br>vượt số lần quy định"), n().find(".js__kyc-header-submessage").html("Bạn đã yêu cầu cung cấp mã xác thực quá nhiều lần trong ngày, vượt quy định cho phép của Batdongsan.com.vn. Mọi thắc mắc vui lòng liên hệ tổng đài <span>1900 1881<\/span> để được hỗ trợ"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()) : i.statusCode != "INVALID_FORMAT_PHONE_NUMBER" && (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()))
                    }, () => {
                        n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                    }))
                }) : setTimeout(ht, 500)
            }(),
            function ct() {
                if (document.querySelectorAll(".js__login-form-link").length) {
                    var n = $(location).attr("pathname");
                    n += window.location.search;
                    document.querySelectorAll(".js__login-form-link").forEach(t => {
                        t.addEventListener("click", () => {
                            localStorage && localStorage.setItem && i && localStorage.setItem(w, JSON.stringify({
                                elementSelector: i.elementSelector,
                                triggerType: i.triggerType,
                                triggerPage: i.triggerPage,
                                triggerPositionTop: i.triggerPositionTop,
                                scrollContentTop: i.scrollContentTop,
                                triggerViewMore: i.triggerViewMore,
                                triggerPositionLazyload: i.triggerPositionLazyload,
                                elementId: i.elementId,
                                agent: i.agent
                            })), t.getAttribute("data-redirect") == "true" ? location.href = `${location.origin}/sellernet/trang-dang-nhap?&redirect=true&returnurl=${encodeURIComponent(n)}` : oi(tt, encodeURIComponent(n), null)
                        })
                    })
                } else setTimeout(ct, 500)
            }()
    };
    this.OpenLoginGateForm = function(s) {
        const tt = $(".js__kyc-form-helper").data("login-gate-form-path"),
            w = $(".js__kyc-form-helper").data("send-otp-path"),
            it = $(".js__kyc-form-helper").data("validate-otp-path"),
            ut = $(".js__kyc-form-helper").data("login-form-path"),
            et = $(".js__kyc-form-helper").data("pwd-flow"),
            st = $(".js__kyc-form-helper").data("is-password-change-path");
        return i = s, new Promise(i => {
            let ct = !1,
                ht = !1;
            document.querySelectorAll(s.elementSelector).forEach(n => {
                    n.getAttribute("tracking-id") || (ht = !0), n.getAttribute("tracking-id") && n.getAttribute("tracking-id").startsWith("click-kyc-") && (ct = !0, ht = !0), !n.getAttribute("tracking-id") || n.getAttribute("tracking-id").startsWith("click-kyc-") || n.getAttribute("tracking-id").startsWith("click-") || (ht = !0)
                }),
                function at(vt) {
                    window.userServices ? window.userServices.getCurrentUserInfo().then(at => {
                        if (ct) {
                            if (at) {
                                let n = !1;
                                document.querySelectorAll(s.elementSelector).forEach(t => {
                                    n = !0, t.getAttribute("tracking-id").startsWith("click-kyc-") && t.setAttribute("tracking-id", t.getAttribute("tracking-id").replace("click-kyc-", ""))
                                });
                                n && document.querySelector(s.elementSelector).dispatchEvent(new Event("click"))
                            } else {
                                let n = !1;
                                document.querySelectorAll(s.elementSelector).forEach(t => {
                                    n = !0, t.getAttribute("tracking-id").startsWith("click-kyc-") && t.setAttribute("tracking-id", t.getAttribute("tracking-id").replace("click-kyc-", "click-"))
                                });
                                n && document.querySelector(s.elementSelector).dispatchEvent(new Event("click"))
                            }
                            i(!1)
                        } else if (ht) i(!0);
                        else {
                            let ht = {
                                classModalDialog: "kyc-login-form--full-screen " + ($(".js__kyc-form-helper").data("ver") || "") + " kyc-ui--login-gate",
                                classContent: `new2021 form-col-1 re__login-gate-kyc js__kyc-login-form re__kyc-phone-mode`,
                                classHeader: `modal-header re__kyc-popup-header`,
                                classFooter: `modal-footer re__kyc-popup-footer`,
                                disableNomodal: !0,
                                title: '<p class="re__kyc-popup-header-title js__kyc-popup-header-title"><p>',
                                width: 464,
                                url: `${e}${tt}`,
                                type: "GET",
                                keepBodyScroll: !1,
                                keepBodyFix: !0,
                                buttons: ti([{
                                    text: "Send OTP",
                                    "class": "re__kyc-send-otp-button-in-footer js__kyc-send-otp-button-in-footer",
                                    eventHandle: function() {
                                        if ($input = r(), t.AddEventLoading($(`.js__submit-loading`)), !$input.val()) {
                                            t.AddErrorMessage($input, "Số điện thoại không được để trống.");
                                            t.RemoveEventLoading();
                                            return
                                        }
                                        let e = t.ValidateMobile($input);
                                        if (!e) {
                                            t.AddErrorMessage($input, "Số điện thoại không hợp lệ");
                                            t.RemoveEventLoading();
                                            return
                                        }
                                        if (!!$(".js__agree-login-kyc").length && !$(".js__agree-login-kyc").hasClass("checked")) {
                                            t.RemoveEventLoading();
                                            return
                                        }
                                        if ($(".kyc-login-form--full-screen--v1").length > 0 && !$(".js__agree-login-kyc").hasClass("checked")) {
                                            t.RemoveEventLoading();
                                            return
                                        }
                                        if (et === "True") {
                                            var i = !1;
                                            if (ii(st, $input.val(), function(n) {
                                                    n === !0 && (i = !0)
                                                }), i) return ui(ut, !1, $input.val())
                                        }
                                        return fetch(`${w}?phoneNumber=${$input.val()}`, {
                                            method: "GET",
                                            headers: {
                                                Accept: "application/json",
                                                "Content-Type": "application/json"
                                            }
                                        }).then(n => n.json()).then(i => {
                                            l = 1, i.isSuccess ? (i.data && i.data.isNewUser ? (n().find(".js__kyc-header-message").html("Đăng ký tài khoản thành công"), n().find(".js__kyc-header-submessage").html("Cảm ơn bạn đã sử dụng dịch vụ của Batdongsan.com.vn")) : (n().find(".js__kyc-header-message").html("Đăng nhập thành công"), n().find(".js__kyc-header-submessage").attr("style", "display: none")), t.RemoveEventLoading(), n().find(yt).html($input.val()), bt(!0), clearTimeout(window.kycLoginFormSetTimeoutId), y(b, o), setTimeout(function() {
                                                $(".js__kyc-otp-count-down").addClass("re__resend-kyc-otp")
                                            }, o * 1e3 + 1e3), f(), t.RemoveErrorMessage($input)) : i.statusCode == "REACH_MAX_OTP_REQUEST" ? (n().find(".js__kyc-header-message").html("Yêu cầu mã OTP<br>vượt số lần quy định"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Bạn đã yêu cầu cung cấp mã xác thực nhiều lần trong ngày, vượt quá quy định cho phép của chúng tôi. Hãy liên hệ tổng đài <span>1900 1881<\/span> để được hỗ trợ."), u(), r().val(""), t.RemoveErrorMessage(r()), t.RemoveEventLoading()) : i.statusCode == "INVALID_FORMAT_PHONE_NUMBER" ? (t.AddErrorMessage($input, "Số điện thoại không hợp lệ"), t.RemoveEventLoading()) : i.statusCode == "USER_IS_BLOCKED" || i.statusCode == "LOCKED_LOGIN" ? (ni(), t.RemoveEventLoading()) : i.statusCode == "PHONE_IS_IN_USED_AS_SECONDARY_NUMBER" ? (t.AddErrorMessage($input, "Hệ thống không hỗ trợ đăng nhập với số điện thoại phụ.<br/>Vui lòng sử dụng số điện thoại chính."), t.RemoveEventLoading()) : (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()), t.RemoveEventLoading()
                                        }, () => {
                                            n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                                        })
                                    }
                                }, {
                                    text: "Validate OTP",
                                    "class": "re__kyc-validate-otp-button-in-footer js__kyc-validate-otp-button-in-footer",
                                    eventHandle: function() {
                                        p();
                                        document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                                            n.setAttribute("disabled", !0)
                                        });
                                        document.querySelectorAll(ot).forEach(n => {
                                            n.setAttribute("disabled", !0)
                                        });
                                        t.AddEventLoading($(`.js__submit-loading`));
                                        var i = wt();
                                        if (!i || i.length < 6) {
                                            g("Mã xác thực chưa hoàn thành.");
                                            document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                                                n.removeAttribute("disabled")
                                            });
                                            document.querySelectorAll(ot).forEach(n => {
                                                n.removeAttribute("disabled")
                                            });
                                            t.RemoveEventLoading();
                                            return
                                        }
                                        fetch(`${e}${it}`, {
                                            method: "POST",
                                            headers: {
                                                Accept: "application/json",
                                                "Content-Type": "application/json"
                                            },
                                            body: JSON.stringify({
                                                phoneNumber: r().val(),
                                                otpValue: i
                                            })
                                        }).then(n => n.json()).then(i => {
                                            var r, u;
                                            if (document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                                                    n.removeAttribute("disabled")
                                                }), document.querySelectorAll(ot).forEach(n => {
                                                    n.removeAttribute("disabled")
                                                }), t.RemoveEventLoading(), !i.isSuccess) {
                                                g("Mã xác thực không hợp lệ");
                                                return
                                            }
                                            if (i.statusCode == "ChoosentAccount") {
                                                r = i.data.userTokens.filter(n => n.userType != 4)[0].token;
                                                n().find(k).data("token", r);
                                                n().find(k).attr("data-token", r);
                                                u = i.data.userTokens.filter(n => n.userType == 4)[0].token;
                                                n().find(d).data("token", u);
                                                n().find(d).attr("data-token", u);
                                                kt();
                                                return
                                            }
                                            rt()
                                        }, () => {
                                            document.querySelectorAll(".js__kyc-otp-input-element").forEach(n => {
                                                n.removeAttribute("disabled")
                                            }), document.querySelectorAll(ot).forEach(n => {
                                                n.removeAttribute("disabled"), document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click")))
                                            }), n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                                        })
                                    }
                                }, {
                                    text: "Close popup",
                                    "class": "re__kyc-close-popup-button-in-footer js__kyc-close-popup-button-in-footer",
                                    eventHandle: function() {
                                        document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click")));
                                        ft();
                                        s.isIFrame === !0 ? ($("#dialogPopup").append('<div id="fancybox-loading"><div><\/div><\/div>'), ri()) : $(".modal-content .close").click()
                                    }
                                }, {
                                    text: "Back to Send OTP",
                                    "class": "hidden js__back-to-kyc-phone-mode-in-footer",
                                    eventHandle: function() {
                                        v();
                                        nt();
                                        p();
                                        ft()
                                    }
                                }])
                            };
                            t.ShowDialog(ht);
                            v();
                            s.isIFrame === !0 && $(".kyc-login-form--full-screen").css({
                                    height: "576px",
                                    "margin-top": "-25px",
                                    "background-position": "0px calc(100% + 0px)"
                                }),
                                function vt(n) {
                                    document.querySelectorAll(".re__feature-web-popup").length ? s.isIFrame === !0 && $(".re__feature-web-popup").css("max-height", "unset") : n && setTimeout(() => {
                                        vt(n - 1)
                                    }, 100)
                                }(20),
                                function pt(n) {
                                    document.querySelectorAll(".js__login-gate--auto-text").length ? document.querySelectorAll(".js__login-gate--auto-text").forEach(n => {
                                        n.dynamicText({
                                            texts: ["Xem lịch sử giá", "Nhận tin mới tự động"]
                                        })
                                    }) : n && setTimeout(() => {
                                        pt(n - 1)
                                    }, 500)
                                }(20),
                                function dt() {
                                    var i = n().find(".js__resend-kyc-otp");
                                    i.length == 1 ? i.click(function() {
                                        a || (document.querySelector("#otp-input") && (clearTimeout(h), clearTimeout(c), document.querySelector("#otp-input").value = "", document.querySelectorAll(".js__kyc-validate-otp-button-in-body").forEach(n => n.removeAttribute("data-click"))), a = !0, fetch(`${w}?phoneNumber=${$input.val()}`, {
                                            method: "GET",
                                            headers: {
                                                Accept: "application/json",
                                                "Content-Type": "application/json"
                                            }
                                        }).then(n => n.json()).then(n => (a = !1, clearTimeout(window.kycLoginFormSetTimeoutId), y(b, o), setTimeout(function() {
                                            $(".js__kyc-otp-count-down").addClass("re__resend-kyc-otp")
                                        }, o * 1e3 + 1e3), nt(), lt(), l++, l == 5 && $(".js__kyc-otp-count-down").remove(), $(".js__kyc-otp-count-down").removeClass("re__resend-kyc-otp"), n)).then(i => {
                                            i.isSuccess || (i.statusCode == "REACH_MAX_OTP_REQUEST" ? (n().find(".js__kyc-header-message").html("Yêu cầu mã OTP<br>vượt số lần quy định"), n().find(".js__kyc-header-submessage").html("Bạn đã yêu cầu cung cấp mã xác thực quá nhiều lần trong ngày, vượt quy định cho phép của Batdongsan.com.vn. Mọi thắc mắc vui lòng liên hệ tổng đài <span>1900 1881<\/span> để được hỗ trợ"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()) : i.statusCode != "INVALID_FORMAT_PHONE_NUMBER" && (n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()))
                                        }, () => {
                                            n().find(".js__kyc-header-message").html("Rất tiếc, đã có lỗi xảy ra"), n().find(".js__kyc-header-submessage").removeAttr("style"), n().find(".js__kyc-header-submessage").html("Vui lòng kiểm tra và thử lại"), u(), r().val(""), f(), t.RemoveErrorMessage(r()), t.RemoveEventLoading()
                                        }))
                                    }) : setTimeout(dt, 500)
                                }();
                            i(!1)
                        }
                    }).then(() => i(!1)) : vt && setTimeout(() => {
                        at(vt - 1)
                    }, 500)
                }(20)
        })
    };
    ut = ""
};