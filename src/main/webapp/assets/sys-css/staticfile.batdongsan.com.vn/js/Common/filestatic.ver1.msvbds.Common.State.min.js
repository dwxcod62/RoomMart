window.stateHelper = function(n, t, i) {
    function u(n) {
        return r[n]
    }

    function o(n, t, i) {
        var e, o, s;
        if (t == null) {
            f(n);
            return
        }
        if (e = u(n), typeof t == "function") {
            o = t(e, r);
            r[n] = o;
            return
        }
        if (!i || !e || typeof e != "object" || typeof t != "object") {
            r[n] = t;
            return
        }
        s = Object.assign({}, e, t);
        r[n] = s
    }

    function f(n) {
        delete r[n]
    }

    function s() {
        r = {}
    }
    const e = Object.assign({}, t || {});
    let r = Object.assign({}, i || {});
    return {
        getConfig: () => Object.assign({}, e),
        get: u,
        set: o,
        remove: f,
        clear: s
    }
}(window, window.stateConfig, window.initialState);