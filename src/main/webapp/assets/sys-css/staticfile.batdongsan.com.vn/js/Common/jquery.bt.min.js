jQuery.bt = {
        version: "0.9.5-rc1"
    },
    function(n) {
        jQuery.fn.bt = function(t, r) {
            function c(n, t) {
                for (this.moveTo(n[0].x, n[0].y), i = 1; i < n.length; i++) n[i - 1].type == "arcStart" ? (this.quadraticCurveTo(f(n[i].x, t), f(n[i].y, t), f(n[(i + 1) % n.length].x, t), f(n[(i + 1) % n.length].y, t)), i++) : this.lineTo(f(n[i].x, t), f(n[i].y, t))
            }

            function f(n, t) {
                return t = u(t), t % 2 ? n : Math.round(n - .5) + .5
            }

            function u(n) {
                return parseInt(n) || 0
            }

            function o(n, t) {
                var i, r = [];
                for (i in n) n[i] != t && r.push(n[i]);
                return r
            }

            function a() {
                try {
                    var n = navigator.userAgent.toLowerCase();
                    if (/webkit/.test(n) || /gecko|mozilla/.test(n) && parseFloat(n.match(/firefox\/(\d+(?:\.\d+)+)/)[1]) >= 3.1) return !0
                } catch (t) {}
                return !1
            }

            function l(n, t, i) {
                var r, u;
                return n.x == t.x ? (r = n.y < t.y ? n.y + i : n.y - i, {
                    x: n.x,
                    y: r
                }) : n.y == t.y ? (u = n.x < t.x ? n.x + i : n.x - i, {
                    x: u,
                    y: n.y
                }) : void 0
            }

            function s(n, t, i, r, u) {
                if (t == r) return {
                    x: u,
                    y: t
                };
                var f = (t - r) / (n - i),
                    e = t - f * n,
                    o = f * u + e;
                return {
                    x: u,
                    y: o
                }
            }

            function h(n, t, i, r, u) {
                if (n == i) return {
                    x: n,
                    y: u
                };
                var f = (t - r) / (n - i),
                    e = t - f * n,
                    o = (u - e) / f;
                return {
                    x: o,
                    y: u
                }
            }
            var e;
            return typeof t != "string" ? (e = !0, r = t, t = !1) : e = !1, jQuery.fn.hoverIntent && jQuery.bt.defaults.trigger == "hover" && (jQuery.bt.defaults.trigger = "hoverIntent"), this.each(function() {
                var i = jQuery.extend(!1, jQuery.bt.defaults, jQuery.bt.options, r),
                    f, v, y;
                i.spikeLength = u(i.spikeLength);
                i.spikeGirth = u(i.spikeGirth);
                i.overlap = u(i.overlap);
                f = !1;
                i.killTitle && n(this).find("[title]").andSelf().each(function() {
                    n(this).attr("bt-xTitle") || n(this).attr("bt-xTitle", n(this).attr("title")).attr("title", "")
                });
                typeof i.trigger == "string" && (i.trigger = [i.trigger]);
                i.trigger[0] == "hoverIntent" ? (v = jQuery.extend(i.hoverIntentOpts, {
                    over: function() {
                        this.btOn()
                    },
                    out: function() {
                        this.btOff()
                    }
                }), n(this).hoverIntent(v)) : i.trigger[0] == "hover" ? n(this).hover(function() {
                    this.btOn()
                }, function() {
                    this.btOff()
                }) : i.trigger[0] == "now" ? n(this).hasClass("bt-active") ? this.btOff() : this.btOn() : i.trigger[0] == "none" || (i.trigger.length > 1 && i.trigger[0] != i.trigger[1] ? n(this).bind(i.trigger[0], function() {
                    this.btOn()
                }).bind(i.trigger[1], function() {
                    this.btOff()
                }) : n(this).bind(i.trigger[0], function() {
                    n(this).hasClass("bt-active") ? this.btOff() : this.btOn()
                }));
                this.btOn = function() {
                    var ut, ii, wt, ri, hi, yi, bt, kt, o, v, li, ai, vi, ir, nt, vt, yt, ti, it, pt, rt, g, st, fr;
                    typeof n(this).data("bt-box") == "object" && this.btOff();
                    i.preBuild.apply(this);
                    n(jQuery.bt.vars.closeWhenOpenStack).btOff();
                    n(this).addClass("bt-active " + i.activeClass);
                    e && i.ajaxPath == null && (i.killTitle && n(this).attr("title", n(this).attr("bt-xTitle")), t = n.isFunction(i.contentSelector) ? i.contentSelector.apply(this) : eval(i.contentSelector), i.killTitle && n(this).attr("title", ""));
                    i.ajaxPath != null && t == !1 && (ut = typeof i.ajaxPath == "object" ? eval(i.ajaxPath[0]) + (i.ajaxPath[1] ? " " + i.ajaxPath[1] : "") : i.ajaxPath, ii = ut.indexOf(" "), ii >= 0 && (wt = ut.slice(ii, ut.length), ut = ut.slice(0, ii)), ri = i.ajaxCache ? n(document.body).data("btCache-" + ut.replace(/\./g, "")) : null, typeof ri == "string" ? t = wt ? n("<div/>").append(ri.replace(/<script(.|\s)*?\/script>/g, "")).find(wt) : ri : (hi = this, yi = jQuery.extend(!1, {
                        type: i.ajaxType,
                        data: i.ajaxData,
                        cache: i.ajaxCache,
                        url: ut,
                        complete: function(r, u) {
                            u == "success" || u == "notmodified" ? (i.ajaxCache && n(document.body).data("btCache-" + ut.replace(/\./g, ""), r.responseText), f = !1, t = wt ? n("<div/>").append(r.responseText.replace(/<script(.|\s)*?\/script>/g, "")).find(wt) : r.responseText) : (u == "timeout" && (f = !0), t = i.ajaxError.replace(/%error/g, r.statusText));
                            n(hi).hasClass("bt-active") && hi.btOn()
                        }
                    }, i.ajaxOpts), jQuery.ajax(yi), t = i.ajaxLoading));
                    var pi = 0,
                        wi = 0,
                        ft = 0,
                        et = 0;
                    if (i.shadow && !a() && (i.shadow = !1, jQuery.extend(i, i.noShadowOpts)), i.shadow && (pi = i.shadowBlur > Math.abs(i.shadowOffsetX) ? i.shadowBlur * 2 : i.shadowBlur + Math.abs(i.shadowOffsetX), ft = i.shadowBlur - i.shadowOffsetX > 0 ? i.shadowBlur - i.shadowOffsetX : 0, wi = i.shadowBlur > Math.abs(i.shadowOffsetY) ? i.shadowBlur * 2 : i.shadowBlur + Math.abs(i.shadowOffsetY), et = i.shadowBlur - i.shadowOffsetY > 0 ? i.shadowBlur - i.shadowOffsetY : 0), i.offsetParent) var ci = n(i.offsetParent),
                        bi = ci.offset(),
                        ui = n(this).offset(),
                        fi = u(ui.top) - u(bi.top) + u(n(this).css("margin-top")) - et,
                        ei = u(ui.left) - u(bi.left) + u(n(this).css("margin-left")) - ft;
                    else var ci = n(this).css("position") == "absolute" ? n(this).parents().eq(0).offsetParent() : n(this).offsetParent(),
                        ui = n(this).btPosition(),
                        fi = u(ui.top) + u(n(this).css("margin-top")) - et,
                        ei = u(ui.left) + u(n(this).css("margin-left")) - ft;
                    if (bt = n(this).btOuterWidth(), kt = n(this).outerHeight(), typeof t == "object") {
                        var dt = t,
                            oi = n(dt).clone(!0).show(),
                            ki = n(dt).data("bt-clones") || [];
                        ki.push(oi);
                        n(dt).data("bt-clones", ki);
                        n(oi).data("bt-orig", dt);
                        n(this).data("bt-content-orig", {
                            original: dt,
                            clone: oi
                        });
                        t = oi
                    }
                    if (typeof t != "null" && t != "") {
                        o = n('<div class="bt-content"><\/div>').append(t).css({
                            padding: i.padding,
                            position: "absolute",
                            width: i.shrinkToFit ? "auto" : i.width,
                            zIndex: i.textzIndex,
                            left: ft,
                            top: et
                        }).css(i.cssStyles);
                        v = n('<div class="bt-wrapper"><\/div>').append(o).addClass(i.cssClass).css({
                            position: "absolute",
                            width: i.width,
                            zIndex: i.wrapperzIndex,
                            visibility: "hidden"
                        }).appendTo(ci);
                        jQuery.fn.bgiframe && (o.bgiframe(), v.bgiframe());
                        n(this).data("bt-box", v);
                        var gt = u(n(document).scrollTop()),
                            ni = u(n(document).scrollLeft()),
                            di = u(n(window).width()),
                            gi = u(n(window).height()),
                            nr = ni + di,
                            tr = gt + gi,
                            ot = {},
                            si = n(this).offset();
                        if (ot.top = si.top - gt, ot.bottom = gi - (si + kt - gt), ot.left = si.left - ni, ot.right = di - (si.left + bt - ni), li = u(o.outerHeight()), ai = u(o.btOuterWidth()), i.positions.constructor == String && (i.positions = i.positions.replace(/ /, "").split(",")), i.positions[0] == "most") {
                            nt = "top";
                            for (vi in ot) nt = ot[vi] > ot[nt] ? vi : nt
                        } else
                            for (ir in i.positions)
                                if (nt = i.positions[ir], (nt == "left" || nt == "right") && ot[nt] > ai + i.spikeLength) break;
                                else if ((nt == "top" || nt == "bottom") && ot[nt] > li + i.spikeLength) break;
                        var rr = ei + (bt - ai) * .5,
                            ur = fi + (kt - li) * .5,
                            r = [],
                            p, w, b, k, ht, ct, lt, at, y, tt, d;
                        switch (nt) {
                            case "top":
                                o.css("margin-bottom", i.spikeLength + "px");
                                v.css({
                                    top: fi - o.outerHeight(!0) + i.overlap,
                                    left: rr
                                });
                                at = nr - i.windowMargin - (o.offset().left + o.btOuterWidth(!0));
                                vt = ft;
                                at < 0 && (v.css("left", u(v.css("left")) + at + "px"), vt -= at);
                                lt = o.offset().left + u(o.css("margin-left")) - (ni + i.windowMargin);
                                lt < 0 && (v.css("left", u(v.css("left")) - lt + "px"), vt += lt);
                                p = o.btPosition().top + u(o.css("margin-top"));
                                w = o.btPosition().left + u(o.css("margin-left"));
                                b = w + o.btOuterWidth();
                                k = p + o.outerHeight();
                                tt = {
                                    x: w + o.btOuterWidth() * i.centerPointX,
                                    y: p + o.outerHeight() * i.centerPointY
                                };
                                r[r.length] = d = {
                                    y: k + i.spikeLength,
                                    x: (b - w) * .5 + vt,
                                    type: "spike"
                                };
                                y = h(d.x, d.y, tt.x, tt.y, k);
                                y.x = y.x < w + i.spikeGirth / 2 + i.cornerRadius ? w + i.spikeGirth / 2 + i.cornerRadius : y.x;
                                y.x = y.x > b - i.spikeGirth / 2 - i.cornerRadius ? b - i.spikeGirth / 2 - i.CornerRadius : y.x;
                                r[r.length] = {
                                    x: y.x - i.spikeGirth / 2,
                                    y: k,
                                    type: "join"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: y.x + i.spikeGirth / 2,
                                    y: k,
                                    type: "join"
                                };
                                r[r.length] = d;
                                break;
                            case "left":
                                o.css("margin-right", i.spikeLength + "px");
                                v.css({
                                    top: ur + "px",
                                    left: ei - o.btOuterWidth(!0) + i.overlap + "px"
                                });
                                ct = tr - i.windowMargin - (o.offset().top + o.outerHeight(!0));
                                yt = et;
                                ct < 0 && (v.css("top", u(v.css("top")) + ct + "px"), yt -= ct);
                                ht = o.offset().top + u(o.css("margin-top")) - (gt + i.windowMargin);
                                ht < 0 && (v.css("top", u(v.css("top")) - ht + "px"), yt += ht);
                                p = o.btPosition().top + u(o.css("margin-top"));
                                w = o.btPosition().left + u(o.css("margin-left"));
                                b = w + o.btOuterWidth();
                                k = p + o.outerHeight();
                                tt = {
                                    x: w + o.btOuterWidth() * i.centerPointX,
                                    y: p + o.outerHeight() * i.centerPointY
                                };
                                r[r.length] = d = {
                                    x: b + i.spikeLength,
                                    y: (k - p) * .5 + yt,
                                    type: "spike"
                                };
                                y = s(d.x, d.y, tt.x, tt.y, b);
                                y.y = y.y < p + i.spikeGirth / 2 + i.cornerRadius ? p + i.spikeGirth / 2 + i.cornerRadius : y.y;
                                y.y = y.y > k - i.spikeGirth / 2 - i.cornerRadius ? k - i.spikeGirth / 2 - i.cornerRadius : y.y;
                                r[r.length] = {
                                    x: b,
                                    y: y.y + i.spikeGirth / 2,
                                    type: "join"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: y.y - i.spikeGirth / 2,
                                    type: "join"
                                };
                                r[r.length] = d;
                                break;
                            case "bottom":
                                o.css("margin-top", i.spikeLength + "px");
                                v.css({
                                    top: fi + kt - i.overlap,
                                    left: rr
                                });
                                at = nr - i.windowMargin - (o.offset().left + o.btOuterWidth(!0));
                                vt = ft;
                                at < 0 && (v.css("left", u(v.css("left")) + at + "px"), vt -= at);
                                lt = o.offset().left + u(o.css("margin-left")) - (ni + i.windowMargin);
                                lt < 0 && (v.css("left", u(v.css("left")) - lt + "px"), vt += lt);
                                p = o.btPosition().top + u(o.css("margin-top"));
                                w = o.btPosition().left + u(o.css("margin-left"));
                                b = w + o.btOuterWidth();
                                k = p + o.outerHeight();
                                tt = {
                                    x: w + o.btOuterWidth() * i.centerPointX,
                                    y: p + o.outerHeight() * i.centerPointY
                                };
                                r[r.length] = d = {
                                    x: (b - w) * .5 + vt,
                                    y: et,
                                    type: "spike"
                                };
                                y = h(d.x, d.y, tt.x, tt.y, p);
                                y.x = y.x < w + i.spikeGirth / 2 + i.cornerRadius ? w + i.spikeGirth / 2 + i.cornerRadius : y.x;
                                y.x = y.x > b - i.spikeGirth / 2 - i.cornerRadius ? b - i.spikeGirth / 2 - i.cornerRadius : y.x;
                                r[r.length] = {
                                    x: y.x + i.spikeGirth / 2,
                                    y: p,
                                    type: "join"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: y.x - i.spikeGirth / 2,
                                    y: p,
                                    type: "join"
                                };
                                r[r.length] = d;
                                break;
                            case "right":
                                o.css("margin-left", i.spikeLength + "px");
                                v.css({
                                    top: ur + "px",
                                    left: ei + bt - i.overlap + "px"
                                });
                                ct = tr - i.windowMargin - (o.offset().top + o.outerHeight(!0));
                                yt = et;
                                ct < 0 && (v.css("top", u(v.css("top")) + ct + "px"), yt -= ct);
                                ht = o.offset().top + u(o.css("margin-top")) - (gt + i.windowMargin);
                                ht < 0 && (v.css("top", u(v.css("top")) - ht + "px"), yt += ht);
                                p = o.btPosition().top + u(o.css("margin-top"));
                                w = o.btPosition().left + u(o.css("margin-left"));
                                b = w + o.btOuterWidth();
                                k = p + o.outerHeight();
                                tt = {
                                    x: w + o.btOuterWidth() * i.centerPointX,
                                    y: p + o.outerHeight() * i.centerPointY
                                };
                                r[r.length] = d = {
                                    x: ft,
                                    y: (k - p) * .5 + yt,
                                    type: "spike"
                                };
                                y = s(d.x, d.y, tt.x, tt.y, w);
                                y.y = y.y < p + i.spikeGirth / 2 + i.cornerRadius ? p + i.spikeGirth / 2 + i.cornerRadius : y.y;
                                y.y = y.y > k - i.spikeGirth / 2 - i.cornerRadius ? k - i.spikeGirth / 2 - i.cornerRadius : y.y;
                                r[r.length] = {
                                    x: w,
                                    y: y.y - i.spikeGirth / 2,
                                    type: "join"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: p,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: b,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: k,
                                    type: "corner"
                                };
                                r[r.length] = {
                                    x: w,
                                    y: y.y + i.spikeGirth / 2,
                                    type: "join"
                                };
                                r[r.length] = d
                        }
                        if (ti = document.createElement("canvas"), n(ti).attr("width", u(o.btOuterWidth(!0)) + i.strokeWidth * 2 + pi).attr("height", u(o.outerHeight(!0)) + i.strokeWidth * 2 + wi).appendTo(v).css({
                                position: "absolute",
                                zIndex: i.boxzIndex
                            }), typeof G_vmlCanvasManager != "undefined" && (ti = G_vmlCanvasManager.initElement(ti)), i.cornerRadius > 0) {
                            for (it = [], rt = 0; rt < r.length; rt++) r[rt].type == "corner" ? (pt = l(r[rt], r[(rt - 1) % r.length], i.cornerRadius), pt.type = "arcStart", it[it.length] = pt, it[it.length] = r[rt], pt = l(r[rt], r[(rt + 1) % r.length], i.cornerRadius), pt.type = "arcEnd", it[it.length] = pt) : it[it.length] = r[rt];
                            r = it
                        }
                        if (g = ti.getContext("2d"), i.shadow && i.shadowOverlap !== !0) {
                            st = u(i.shadowOverlap);
                            switch (nt) {
                                case "top":
                                    i.shadowOffsetX + i.shadowBlur - st > 0 && v.css("top", u(v.css("top")) - (i.shadowOffsetX + i.shadowBlur - st));
                                    break;
                                case "right":
                                    ft - st > 0 && v.css("left", u(v.css("left")) + ft - st);
                                    break;
                                case "bottom":
                                    et - st > 0 && v.css("top", u(v.css("top")) + et - st);
                                    break;
                                case "left":
                                    i.shadowOffsetY + i.shadowBlur - st > 0 && v.css("left", u(v.css("left")) - (i.shadowOffsetY + i.shadowBlur - st))
                            }
                        }
                        c.apply(g, [r], i.strokeWidth);
                        g.fillStyle = i.fill;
                        i.shadow && (g.shadowOffsetX = i.shadowOffsetX, g.shadowOffsetY = i.shadowOffsetY, g.shadowBlur = i.shadowBlur, g.shadowColor = i.shadowColor);
                        g.closePath();
                        g.fill();
                        i.strokeWidth > 0 && (g.shadowColor = "rgba(0, 0, 0, 0)", g.lineWidth = i.strokeWidth, g.strokeStyle = i.strokeStyle, g.beginPath(), c.apply(g, [r], i.strokeWidth), g.closePath(), g.stroke());
                        i.preShow.apply(this, [v[0]]);
                        v.css({
                            display: "none",
                            visibility: "visible"
                        });
                        i.showTip.apply(this, [v[0]]);
                        i.overlay && (fr = n('<div class="bt-overlay"><\/div>').css({
                            position: "absolute",
                            backgroundColor: "blue",
                            top: fi,
                            left: ei,
                            width: bt,
                            height: kt,
                            opacity: ".2"
                        }).appendTo(ci), n(this).data("overlay", fr));
                        (i.ajaxPath != null && i.ajaxCache == !1 || f) && (t = !1);
                        i.clickAnywhereToClose && (jQuery.bt.vars.clickAnywhereStack.push(this), n(document).click(jQuery.bt.docClick));
                        i.closeWhenOthersOpen && jQuery.bt.vars.closeWhenOpenStack.push(this);
                        i.postShow.apply(this, [v[0]])
                    }
                };
                this.btOff = function() {
                    var r = n(this).data("bt-box"),
                        t;
                    i.preHide.apply(this, [r]);
                    t = this;
                    t.btCleanup = function() {
                        var u = n(t).data("bt-box"),
                            r = n(t).data("bt-content-orig"),
                            f = n(t).data("bt-overlay"),
                            e;
                        typeof u == "object" && (n(u).remove(), n(t).removeData("bt-box"));
                        typeof r == "object" && (e = n(r.original).data("bt-clones"), n(r).data("bt-clones", o(e, r.clone)));
                        typeof f == "object" && (n(f).remove(), n(t).removeData("bt-overlay"));
                        jQuery.bt.vars.clickAnywhereStack = o(jQuery.bt.vars.clickAnywhereStack, t);
                        jQuery.bt.vars.closeWhenOpenStack = o(jQuery.bt.vars.closeWhenOpenStack, t);
                        n(t).removeClass("bt-active " + i.activeClass);
                        i.postHide.apply(t)
                    };
                    i.hideTip.apply(this, [r, t.btCleanup])
                };
                y = this.btRefresh = function() {
                    this.btOff();
                    this.btOn()
                }
            })
        };
        jQuery.fn.btPosition = function() {
            function n(n, t) {
                return n[0] && parseInt(jQuery.css(n[0], t, !0), 10) || 0
            }
            var u;
            if (this[0]) {
                var t = this.offsetParent(),
                    i = this.offset(),
                    r = /^body|html$/i.test(t[0].tagName) ? {
                        top: 0,
                        left: 0
                    } : t.offset();
                i.top -= n(this, "marginTop");
                i.left -= n(this, "marginLeft");
                r.top += n(t, "borderTopWidth");
                r.left += n(t, "borderLeftWidth");
                u = {
                    top: i.top - r.top,
                    left: i.left - r.left
                }
            }
            return u
        };
        jQuery.fn.btOuterWidth = function(n) {
            function t(n, t) {
                return n[0] && parseInt(jQuery.css(n[0], t, !0), 10) || 0
            }
            return this.innerWidth() + t(this, "borderLeftWidth") + t(this, "borderRightWidth") + (n ? t(this, "marginLeft") + t(this, "marginRight") : 0)
        };
        jQuery.fn.btOn = function() {
            return this.each(function() {
                jQuery.isFunction(this.btOn) && this.btOn()
            })
        };
        jQuery.fn.btOff = function() {
            return this.each(function() {
                jQuery.isFunction(this.btOff) && this.btOff()
            })
        };
        jQuery.bt.vars = {
            clickAnywhereStack: [],
            closeWhenOpenStack: []
        };
        jQuery.bt.docClick = function(t) {
            if (!t) var t = window.event;
            !n(t.target).parents().andSelf().filter(".bt-wrapper, .bt-active").length && jQuery.bt.vars.clickAnywhereStack.length && (n(jQuery.bt.vars.clickAnywhereStack).btOff(), n(document).unbind("click", jQuery.bt.docClick))
        };
        jQuery.bt.defaults = {
            trigger: "hover",
            clickAnywhereToClose: !0,
            closeWhenOthersOpen: !1,
            shrinkToFit: !1,
            width: "200px",
            padding: "5px",
            spikeGirth: 10,
            spikeLength: 15,
            overlap: 0,
            overlay: !1,
            killTitle: !0,
            textzIndex: 9999,
            boxzIndex: 9998,
            wrapperzIndex: 9997,
            offsetParent: null,
            positions: ["most"],
            fill: "rgb(255, 255, 102)",
            windowMargin: 10,
            strokeWidth: 1,
            strokeStyle: "#000",
            cornerRadius: 5,
            centerPointX: .5,
            centerPointY: .5,
            shadow: !1,
            shadowOffsetX: 2,
            shadowOffsetY: 2,
            shadowBlur: 3,
            shadowColor: "#000",
            shadowOverlap: !1,
            noShadowOpts: {
                strokeStyle: "#999"
            },
            cssClass: "",
            cssStyles: {},
            activeClass: "bt-active",
            contentSelector: "$(this).attr('title')",
            ajaxPath: null,
            ajaxError: "<strong>ERROR:<\/strong> <em>%error<\/em>",
            ajaxLoading: "<blink>Loading...<\/blink>",
            ajaxData: {},
            ajaxType: "GET",
            ajaxCache: !0,
            ajaxOpts: {},
            preBuild: function() {},
            preShow: function() {},
            showTip: function(t) {
                n(t).show()
            },
            postShow: function() {},
            preHide: function() {},
            hideTip: function(t, i) {
                n(t).hide();
                i()
            },
            postHide: function() {},
            hoverIntentOpts: {
                interval: 300,
                timeout: 500
            }
        };
        jQuery.bt.options = {}
    }(jQuery);