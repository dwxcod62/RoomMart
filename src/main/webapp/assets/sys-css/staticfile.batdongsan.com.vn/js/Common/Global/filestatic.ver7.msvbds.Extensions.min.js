HTMLInputElement.prototype.dynamicPlaceholder = function(n) {
    function o() {
        t.addEventListener("focusin", f);
        t.addEventListener("focusout", u)
    }

    function l() {
        t.removeEventListener("focusin", f);
        t.removeEventListener("focusout", u)
    }

    function s() {
        var t = Math.round(Math.random() * (n.placeholders.length - 1));
        return e != t ? (e = t, n.placeholders[t]) : s()
    }

    function h() {
        var f = s(),
            u = 0;
        (function e() {
            u <= f.length ? (t.setAttribute("placeholder", f.substr(0, u)), u++, i = setTimeout(e, n.renderPlaceholderTime)) : r = setTimeout(h, n.placeholderDurationTime)
        })()
    }

    function u() {
        i || r || n.placeholders && n.placeholders.length && h()
    }

    function f() {
        i && (clearTimeout(i), i = null);
        r && (clearTimeout(r), r = null);
        renderComplete = !0;
        t.setAttribute("placeholder", c)
    }
    n = Object.assign({
        renderPlaceholderTime: 100,
        placeholderDurationTime: 2e3
    }, n);
    var t = this,
        i = null,
        r = null,
        e = null,
        c = t.getAttribute("placeholder");
    return function() {
        u();
        o()
    }(), {
        Start: u,
        Clear: f,
        ApplyEvent: o,
        ClearEvent: l
    }
};
HTMLElement.prototype.dynamicText = function(n) {
    function o() {
        t.addEventListener("mousedown", f);
        t.addEventListener("mouseout", u)
    }

    function l() {
        t.removeEventListener("mousedown", f);
        t.removeEventListener("mouseout", u)
    }

    function s() {
        var t = Math.round(Math.random() * (n.texts.length - 1));
        return e != t ? (e = t, n.texts[t]) : s()
    }

    function h() {
        var f = s(),
            u = 0;
        (function e() {
            u <= f.length ? (t.classList.remove("re__stop-typing"), t.innerHTML = f.substr(0, u), u++, i = setTimeout(e, n.renderTextTime)) : (t.classList.add("re__stop-typing"), r = setTimeout(h, n.textDurationTime))
        })()
    }

    function u() {
        i || r || n.texts && n.texts.length && h()
    }

    function f() {
        i && (clearTimeout(i), i = null);
        r && (clearTimeout(r), r = null);
        renderComplete = !0;
        t.innerHTML = c
    }
    n = Object.assign({
        renderTextTime: 100,
        textDurationTime: 2e3
    }, n);
    var t = this,
        i = null,
        r = null,
        e = null,
        c = t.innerHTML.trim();
    return function() {
        u();
        o()
    }(), {
        Start: u,
        Clear: f,
        ApplyEvent: o,
        ClearEvent: l
    }
};
Element.prototype.mCustomScrollbar = function() {
    var t, r, n, e, f, h, c;
    this.classList.contains("mCSB_container") || (t = document.createElement("div"), t.classList.add("mCSB_scrollTools"), t.style.position = "absolute", t.style.width = "12px", t.innerHTML = `
            <div class="mCSB_draggerContainer">
                <div class="mCSB_dragger" style="position: absolute;">
                    <div class="mCSB_dragger_bar" style="width: 4px; margin-right: 4px"></div>
                </div>
                <div class="mCSB_draggerRail"></div>
            </div>
        `, r = this.cloneNode(!1), r.classList.add("mCustomScrollbar"), n = document.createElement("div"), n.classList.add("mCustomScrollBox"), n.classList.add("mCS-light"), n.classList.add("mCSB_vertical"), r.appendChild(n), this.parentNode.insertBefore(r, this), e = [], this.classList.forEach(n => {
        e.push(n)
    }), e.forEach(n => {
        this.classList.remove(n)
    }), this.classList.add("mCSB_container"), this.style.maxHeight = "unset", this.style.position = "relative", n.appendChild(this), n.appendChild(t), this.onwheel = function(t) {
        var s = +this.style.top.replace("px", ""),
            r = s - t.deltaY,
            u = this.parentElement.parentElement,
            f = u.clientHeight - window.getComputedStyle(u, null).getPropertyValue("padding-top").replace("px", "") - window.getComputedStyle(u, null).getPropertyValue("padding-bottom").replace("px", ""),
            h = f > this.clientHeight ? 0 : f - this.clientHeight,
            e, o;
        r > 0 && (r = Math.min(0, r));
        r < 0 && (r = Math.max(h, r));
        e = f / i.clientHeight;
        this.style.top = `${r}px`;
        o = n.querySelector(".mCSB_scrollTools").querySelector(".mCSB_draggerContainer").querySelector(".mCSB_dragger");
        o.style.top = `${Math.round(e*r*-1)}px`
    });
    var u = this.parentElement.parentElement,
        n = u.querySelector(".mCustomScrollBox"),
        i = n.querySelector(".mCSB_container");
    i.style.top = "-0px";
    f = u.clientHeight - window.getComputedStyle(u, null).getPropertyValue("padding-top").replace("px", "") - window.getComputedStyle(u, null).getPropertyValue("padding-bottom").replace("px", "");
    n.style.maxHeight = `${f}px`;
    n.style.overflow = `hidden`;
    n.style.position = `relative`;
    var t = n.querySelector(".mCSB_scrollTools"),
        o = t.querySelector(".mCSB_draggerContainer"),
        l = o.querySelector(".mCSB_dragger"),
        s = i.clientHeight;
    s > f ? (i.style.marginRight = "", t.style.display = "", h = o.clientHeight, c = Math.round(f / s * h), l.style.height = `${c}px`) : (i.style.marginRight = "0px", t.style.display = "none")
};
HTMLElement.prototype.getParent = function(n) {
    if (!this || this.nodeName == "HTML") return null;
    var t = this.parentElement;
    return t.classList.contains(n) ? t : t.id == n ? t : t.getParent(n)
};