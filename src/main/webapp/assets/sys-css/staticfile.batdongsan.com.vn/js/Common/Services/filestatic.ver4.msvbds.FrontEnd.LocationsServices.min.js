window.FrontEnd || (window.FrontEnd = {});
FrontEnd.LocationsServices = function(n) {
    function p(n) {
        var r = "",
            u, i, t;
        if (n == null) return r;
        for (i = "a", t = 0; t < n.length; t++)(i !== " " || n[t] !== " ") && (i = n[t], u = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTVWXYZàáảãạâầấẩẫậăằắẳẵặèéẻẽẹêềếểễệđìíỉĩịòóỏõọôồốổỗộơờớởỡợùúủũụưừứửữựỳýỷỹỵÀÁẢÃẠÂẦẤẨẪẬĂẰẮẲẴẶÈÉẺẼẸÊỀẾỂỄỆĐÌÍỈĨỊÒÓỎÕỌÔỒỐỔỖỘƠỜỚỞỠỢÙÚỦŨỤƯỪỨỬỮỰỲÝỶỸỴÂĂĐÔƠƯ1234567890~!@#$%^&*()_+=-{}][|\":;'\\/.,<>? \n\r\t".indexOf(i), u >= 0 && (r += "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTVWXYZaaaaaaaaaaaaaaaaaeeeeeeeeeeediiiiiooooooooooooooooouuuuuuuuuuuyyyyyAAAAAAAAAAAAAAAAAEEEEEEEEEEEDIIIOOOOOOOOOOOOOOOOOOOUUUUUUUUUUUYYYYYAADOOU1234567890~!@#$%^&*()_+=-{}][|\":;'\\/.,<>? \n\r\t" [u]));
        return r
    }

    function b(n) {
        return n.map(n => {
            var t = p(n.name);
            return n.code == "HN" ? t = "001" + t : n.code == "SG" ? t = "002" + t : n.code == "BD" ? t = "003" + t : n.code == "DDN" ? t = "004" + t : n.code == "KH" ? t = "005" + t : n.code == "DNA" ? t = "006" + t : n.code == "HP" ? t = "007" + t : n.code == "VT" && (t = "008" + t), {
                code: n.code,
                name: n.name,
                sortField: t
            }
        }).sort((n, t) => n.sortField > t.sortField ? 1 : n.sortField < t.sortField ? -1 : 0).map(n => ({
            code: n.code,
            name: n.name
        }))
    }

    function k(n) {
        return n.map(n => ({
            districtId: n.districtId,
            name: n.name,
            cityCode: n.cityCode,
            sortField: p(n.name)
        })).sort((n, t) => n.sortField > t.sortField ? 1 : n.sortField < t.sortField ? -1 : 0).map(n => ({
            districtId: n.districtId,
            name: n.name,
            cityCode: n.cityCode
        }))
    }

    function c() {
        return new Promise(function(i) {
            var r, f, e;
            u ? setTimeout(function() {
                c().then(function(n) {
                    i(n)
                })
            }, 100) : (u = !0, r = !1, localStorage && (f = localStorage.getItem(t.CITIES), f && (e = JSON.parse(f), r = !0, u = !1, i(e))), r || fetch(n.getCitiesUrl, {
                method: "GET",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*"
                }
            }).then(n => n.json()).then(function(n) {
                localStorage && localStorage.setItem(t.CITIES, JSON.stringify(n));
                u = !1;
                i(n)
            }, function() {
                u = !1
            }))
        }).then(b)
    }

    function h(i) {
        return new Promise(function(r) {
            if (f) setTimeout(function() {
                h(i).then(function(n) {
                    r(n)
                })
            }, 100);
            else if (f = !0, cacheHelper) {
                var u = cacheHelper.get(t.DISTRICTS);
                u ? (f = !1, r(u)) : fetch(n.getDistrictsUrl, {
                    method: "GET",
                    headers: {
                        Accept: "application/json",
                        "Content-Type": "application/json",
                        "Access-Control-Allow-Origin": "*"
                    }
                }).then(n => n.json()).then(function(n) {
                    cacheHelper && cacheHelper.set(t.DISTRICTS, n, 43200);
                    f = !1;
                    r(n)
                }, function() {
                    f = !1
                })
            }
        }).then(function(n) {
            return i ? n.filter(n => n.cityCode == i) : []
        }).then(k)
    }

    function w(n) {
        for (var r, u, i = ["aàảãáạăằẳẵắặâầẩẫấậ", "AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬ", "dđ", "DĐ", "eèẻẽéẹêềểễếệ", "EÈẺẼÉẸÊỀỂỄẾỆ", "iìỉĩíị", "IÌỈĨÍỊ", "oòỏõóọôồổỗốộơờởỡớợ", "OÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢ", "uùủũúụưừửữứự", "UÙỦŨÚỤƯỪỬỮỨỰ", "yỳỷỹýỵ", "YỲỶỸÝỴ"], t = 0; t < i.length; t++) r = new RegExp("[" + i[t].substr(1) + "]", "g"), u = i[t][0], n = n.replace(r, u);
        return n
    }

    function i(n, t) {
        return (n.temp || (n.temp = w(n.name)), t.temp || (t.temp = w(t.name)), n.temp < t.temp) ? -1 : n.temp > t.temp ? 1 : 0
    }

    function l(n, t) {
        return n.districtId - t.districtId
    }

    function a(r, u = true) {
        return new Promise(function(f) {
            var s, o, h;
            e ? setTimeout(function() {
                a(r, u).then(function(n) {
                    f(n)
                })
            }, 100) : (e = !0, s = [], o = [], r && r.length ? (cacheHelper && r.forEach(function(n) {
                var r = cacheHelper.get(t.WARDS(n));
                r ? (s.push({
                    districtId: n,
                    wards: r
                }), o = u ? o.concat(r.sort(i)) : o.concat(r)) : s.push({
                    districtId: n,
                    wards: null
                })
            }), h = s.filter(n => n.wards == null).map(n => n.districtId), h.length ? fetch(`${n.getWardsByDistrictIdsUrl}?${h.map((n,t)=>`districtIds[${t}]=${n}`).join("&")}`, {
                method: "GET",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json",
                    "Access-Control-Allow-Origin": "*"
                }
            }).then(n => n.json()).then(function(n) {
                o = [];
                s.forEach(function(r) {
                    if (r.wards == null) {
                        var f = n.filter(n => n.districtId == r.districtId);
                        r.wards = f;
                        cacheHelper && cacheHelper.set(t.WARDS(r.districtId), f);
                        o = u ? o.concat(f.sort(i)) : o.concat(f)
                    } else o = u ? o.concat(r.wards.sort(i)) : o.concat(r.wards)
                });
                e = !1;
                f(o.sort(l))
            }) : (e = !1, f(o.sort(l)))) : (e = !1, f(o.sort(l))))
        })
    }

    function v(r, u, f = true) {
        return new Promise(function(e) {
            if (o) setTimeout(function() {
                v(r, u, f).then(function(n) {
                    e(n)
                })
            }, 100);
            else {
                o = !0;
                var c = [],
                    s = [];

                function l() {
                    return new Promise(function(n) {
                        u && u.length ? n(u) : r && h(r).then(function(t) {
                            t ? n(t.map(n => n.districtId)) : n([])
                        })
                    })
                }
                l().then(function(r) {
                    if (r && r.length) {
                        cacheHelper && r.forEach(function(n) {
                            var r = cacheHelper.get(t.STREETS(n));
                            r ? (c.filter(t => t.districtId == n).length < 0 && c.push({
                                districtId: n,
                                streets: r
                            }), s = f ? s.concat(r.sort(i)) : s.concat(r)) : c.push({
                                districtId: n,
                                streets: null
                            })
                        });
                        var u = c.filter(n => n.streets == null).map(n => n.districtId);
                        c.filter(n => n.streets == null).length ? fetch(`${n.getStreetsByDistrictIdsUrl}?${u.map((n,t)=>`districtIds[${t}]=${n}`).join("&")}`, {
                            method: "GET",
                            headers: {
                                Accept: "application/json",
                                "Content-Type": "application/json",
                                "Access-Control-Allow-Origin": "*"
                            }
                        }).then(n => n.json()).then(function(n) {
                            s = [];
                            c.forEach(function(r) {
                                if (r.streets == null) {
                                    var u = n.filter(n => n.districtId == r.districtId);
                                    r.streets = u;
                                    cacheHelper && cacheHelper.set(t.STREETS(r.districtId), u);
                                    s = f ? s.concat(u.sort(i)) : s.concat(u)
                                } else s = f ? s.concat(r.streets.sort(i)) : s.concat(r.streets)
                            });
                            o = !1;
                            e(s)
                        }) : (o = !1, e(s))
                    } else o = !1, e(s)
                })
            }
        })
    }

    function y(r, u, f = true) {
        return new Promise(function(e) {
            if (s) setTimeout(function() {
                y(r, u, f).then(function(n) {
                    e(n)
                })
            }, 100);
            else {
                s = !0;
                var c = [],
                    o = [];

                function l() {
                    return new Promise(function(n) {
                        u && u.length ? n(u) : r ? h(r).then(function(t) {
                            t ? n(t.map(n => n.districtId)) : n([])
                        }) : n([])
                    })
                }
                l().then(function(r) {
                    if (r && r.length) {
                        cacheHelper && r.forEach(function(n) {
                            var r = cacheHelper.get(t.PROJECTS(n));
                            r ? (c.push({
                                districtId: n,
                                projects: r
                            }), o = f ? o.concat(r.sort(i)) : o.concat(r)) : c.push({
                                districtId: n,
                                projects: null
                            })
                        });
                        var u = c.filter(n => n.projects == null).map(n => n.districtId);
                        u.length ? fetch(`${n.getProjectsByDistrictIdsUrl}?${u.map((n,t)=>`districtIds[${t}]=${n}`).join("&")}`, {
                            method: "GET",
                            headers: {
                                Accept: "application/json",
                                "Content-Type": "application/json",
                                "Access-Control-Allow-Origin": "*"
                            }
                        }).then(n => n.json()).then(function(n) {
                            o = [];
                            c.forEach(function(r) {
                                if (r.projects == null) {
                                    var u = n.filter(n => n.districtId == r.districtId);
                                    r.projects = u;
                                    cacheHelper && cacheHelper.set(t.PROJECTS(r.districtId), u);
                                    o = f ? o.concat(u.sort(i)) : o.concat(u)
                                } else o = f ? o.concat(r.projects.sort(i)) : o.concat(r.projects)
                            });
                            s = !1;
                            e(o)
                        }) : (s = !1, e(o))
                    } else s = !1, e(o)
                })
            }
        })
    }

    function d(n) {
        return new Promise(function(t) {
            var i = [];
            c().then(function(r) {
                if (!n.cityCode || n.districtIds && n.districtIds.length) n.districtIds && n.districtIds.length ? Promise.all([h(n.cityCode), y(n.cityCode, n.districtIds, !1), v(n.cityCode, n.districtIds, !1), a(n.districtIds, !1)]).then(function(u) {
                    function k(n) {
                        var t = p.find(t => t.districtId == n),
                            i;
                        return t && (i = r.find(n => n.code == t.cityCode), i) ? {
                            cityName: i.name,
                            districtName: t.name
                        } : null
                    }

                    function l(n, t) {
                        t.reverse().forEach(function(t) {
                            var u = k(t.districtId),
                                r, f;
                            u && (r = i.findIndex(n => n.cityName == u.cityName && n.districtName == u.districtName), r < 0 ? (f = {
                                cityName: u.cityName,
                                districtName: u.districtName
                            }, f[n] = [t.name], i.push(f)) : (i[r][n] || (i[r][n] = []), i[r][n].indexOf(t.name) < 0 && i[r][n].push(t.name)))
                        })
                    }
                    var p = u[0],
                        w = u[1],
                        b = u[2],
                        c = u[3],
                        a, o, v, s, y, f, h, e;
                    if (n.projectIds && n.projectIds.length) {
                        for (a = new Array(n.projectIds.length), f = 0; f < w.length; f++) o = w[f], e = n.projectIds.indexOf(`${o.projectId}_${o.districtId}`), e >= 0 && (a[e] = o);
                        l("projectNames", a)
                    }
                    if (n.streetIds && n.streetIds.length) {
                        for (v = new Array(n.streetIds.length), f = 0; f < b.length; f++) s = b[f], e = n.streetIds.indexOf(`${s.streetId}_${s.districtId}`), e >= 0 && (v[e] = s);
                        l("streetNames", v)
                    }
                    if (n.wardIds && n.wardIds.length) {
                        for (y = new Array(n.wardIds.length), f = 0; f < c.length; f++) h = c[f], e = n.wardIds.indexOf(`${h.wardId}_${h.districtId}`), e >= 0 && (y[e] = h);
                        l("wardNames", y)
                    }
                    n.districtIds && n.districtIds.length && n.districtIds.reverse().forEach(function(n) {
                        var t = k(n),
                            r;
                        t && (r = i.findIndex(n => n.cityName == t.cityName && n.districtName == t.districtName), r < 0 && i.push({
                            cityName: t.cityName,
                            districtName: t.districtName
                        }))
                    });
                    i.forEach(function(n) {
                        var i, r, u, t;
                        if (n.wardNames && n.wardNames.length > 0 && (i = p.find(function(t) {
                                return t.name == n.districtName
                            }), i)) {
                            for (r = !0, u = c.filter(function(n) {
                                    return n.districtId == i.districtId
                                }), t = 0; t < u.length; t++)
                                if (n.wardNames.indexOf(u[t].name) == -1) {
                                    r = !1;
                                    break
                                }
                            r && (n.wardNames = ["Tất cả phường xã"])
                        }
                    });
                    t(i)
                }) : t([]);
                else {
                    var u = r.find(t => t.code == n.cityCode);
                    u && (i.push({
                        cityName: u.name
                    }), t(i))
                }
            })
        })
    }

    function g(n) {
        return new Promise(function(t) {
            d(n).then(function(n) {
                var i = [];
                n.filter(n => n.projectNames && n.projectNames.length > 0 || n.streetNames && n.streetNames.length > 0 || n.wardNames && n.wardNames.length > 0).length > 0 ? n.forEach(function(n) {
                    n.projectNames && n.projectNames.length ? i.push(`${n.projectNames.join(", ")}, ${n.districtName}, ${n.cityName}`.trim()) : n.streetNames && n.streetNames.length ? i.push(`${n.streetNames.join(", ")}, ${n.districtName}, ${n.cityName}`.trim()) : n.wardNames && n.wardNames.length ? i.push(`${n.wardNames.join(", ")}, ${n.districtName}, ${n.cityName}`.trim()) : n.districtName ? i.push(`${n.districtName}, ${n.cityName}`.trim()) : i.push(n.cityName.trim())
                }) : n.filter(n => n.districtName).length > 0 ? i.push(`${n.map(n=>n.districtName).join(", ")}, ${n[0].cityName}`.trim()) : n.length > 0 && i.push(`${n[0].cityName}`.trim());
                t(i)
            })
        })
    }!n && document.querySelectorAll(`[data-locations-services-params]`).length && (n = document.querySelector(`[data-locations-services-params]`).getAttribute("data-locations-services-params") ? JSON.parse(document.querySelector(`[data-locations-services-params]`).getAttribute("data-locations-services-params")) : {});
    var r = "V1",
        t = {
            CITIES: `CITIES_CACHE_${r}`,
            DISTRICTS: `DISTRICTS_CACHE_${r}`,
            STREETS: function(n) {
                return `STREETS_CACHE_${n}_${r}`
            },
            WARDS: function(n) {
                return `WARDS_CACHE_${n}_${r}`
            },
            PROJECTS: function(n) {
                return `PROJECTS_CACHE_${n}_${r}`
            }
        },
        u = !1,
        f = !1,
        e = !1,
        o = !1,
        s = !1;
    this.GetCities = c;
    this.GetDistricts = h;
    this.GetWards = a;
    this.GetStreets = v;
    this.GetProjects = y;
    this.GetLocationTitle = g
};