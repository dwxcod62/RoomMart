window.FrontEnd || (window.FrontEnd = {});
FrontEnd.SearchingHistoriesServicesLocationFocus = function(n) {
    function l() {
        var n = navigator.userAgent;
        return /(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(n) ? "tablet" : /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(n) ? "mobile" : "desktop"
    }

    function f() {
        var n = new Date;
        return n.toUTCString()
    }

    function i(n) {
        if (localStorage) {
            var i = JSON.stringify(n);
            localStorage.setItem(t, i)
        }
    }

    function a(n) {
        if (localStorage && o(n)) {
            var t = JSON.stringify(n);
            localStorage.setItem(s, t)
        }
    }

    function e() {
        var i = [],
            n;
        return localStorage && (n = localStorage.getItem(t), n && (i = JSON.parse(n))), i.map((n, t) => (n.index = t, n.searchingInfos && n.searchingInfos.keywork && (n.searchingInfos.keywork = n.searchingInfos.keywork.replace(/[\u00A0-\u9999<>\&]/gim, function(n) {
            return "&#" + n.charCodeAt(0) + ";"
        })), n))
    }

    function v() {
        var t = {
                code: "",
                label: ""
            },
            n;
        return localStorage && (n = localStorage.getItem(s), n && (t = JSON.parse(n))), t
    }

    function y(r, u) {
        if (localStorage) {
            let o = localStorage.getItem(t);
            var e = [];
            for (o && (e = JSON.parse(o)), e = e.filter(function(n) {
                    return JSON.stringify(n.searchingInfos) !== JSON.stringify(r)
                }), e.push({
                    index: u,
                    searchingInfos: r,
                    platform: l(),
                    saveTime: f()
                }); e.length > (n.maxLength || 20);) e.shift();
            i(e)
        }
    }

    function r(n) {
        if (localStorage) {
            let u = localStorage.getItem(t);
            var r = [];
            u && (r = JSON.parse(u));
            r = r.filter(function(t, i) {
                return i != n
            });
            i(r)
        }
    }

    function p() {
        if (localStorage) {
            let t = localStorage.getItem(u);
            if (t) {
                var n = new Date(t);
                return n
            }
        }
    }

    function w() {
        localStorage && localStorage.setItem(u, f())
    }

    function b(n, t) {
        return Math.round(n.getTime() - t.getTime()) / 6e4
    }

    function o(n) {
        return n && n.code && n.code !== "CN" && n.label
    }
    const t = "SEARCHING_HISTORIES_LOCATION_FORCUS",
        u = "SEARCHING_HISTORIES_LOCATION_FORCUS_SYNC_TIME",
        s = "SEARCHING_HISTORIES_LOCATION_FORCUS_LASTEST_CITY",
        c = 1;
    var h = document.querySelector("#staticDomain") ? document.querySelector("#staticDomain").getAttribute("data-msvrouter") : "";
    (function() {
        !n && document.querySelectorAll("[searching-histories-service-params]").length && (n = JSON.parse(document.querySelector("[searching-histories-service-params]").getAttribute("searching-histories-service-params")))
    })();
    this.GetSearchingHistories = function() {
        return new Promise(function(n) {
            n(e())
        })
    };
    this.SyncSearchingHistories = function(t) {
        var r = p(),
            u;
        (r == null || r != null && b(new Date, r) >= n.syncTimeSearchingHistories) && (u = e(), t.userid && fetch(`${h}${n.syncSearchingHistoriesUrl}?userId=${t.userid}`, {
            method: "POST",
            headers: {
                Accept: "application/json",
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                searchingHistories: u
            })
        }).then(n => n.json()).then(function(n) {
            i(n)
        }), w())
    };
    this.AddSearchingHistory = function(n) {
        return new Promise(function(t) {
            var u = e(),
                h = !1;
            o(n.city) && a(n.city);
            let s = -1,
                l = [];
            if (u && u.length > 0 && (u.forEach((t, i) => {
                    n.productType === t.searchingInfos.productType && (n.title === t.searchingInfos.title && n.price.min === t.searchingInfos.price.min && n.price.max === t.searchingInfos.price.max && n.price.level === t.searchingInfos.price.level && n.area.min === t.searchingInfos.area.min && n.area.max === t.searchingInfos.area.max && n.area.level === t.searchingInfos.area.level && (t.saveTime = f(), h = !0), s < 0 && (s = i), l.push(t))
                }), i(u)), !h) {
                l.length > c && s > -1 && r(s);
                let t = u.length > 0 ? u.length - 1 : u.length;
                y(n, t)
            }
            t()
        })
    };
    this.RemoveSearchingHistory = function(t, i) {
        return new Promise(function(u) {
            if (i) {
                var f = 20;
                (function e() {
                    --f;
                    window.userServices ? window.userServices.getCurrentUserInfo(function(f) {
                        if (f) return cm.AjaxWrapperWithPromise({
                            type: "POST",
                            url: `${h}${n.removeSearchingHistoryUrl}?id=${i}`
                        }).then(function(n) {
                            n && r(t);
                            u(n)
                        });
                        r(t);
                        u(!0)
                    }) : f >= 0 && setTimeout(e, 100)
                })()
            } else r(t), u(!0)
        })
    };
    this.RemoveAllSearchingHistoiesInLocal = function() {
        localStorage && (localStorage.removeItem(t), localStorage.removeItem(u))
    };
    this.AddMonths = function(n, t) {
        return n.setMonth(n.getMonth() + t), n
    };
    this.AutoFillCityHistory = function(n) {
        let t = v();
        o(t) && n(t.code, t.label)
    }
};